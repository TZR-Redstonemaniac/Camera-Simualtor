±>
mC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\Tests\IntersectionTester.cs
public 
class 
IntersectionTester 
:  !
MonoBehaviour" /
{0 1
[ 
Header 
( 
$str 
) 
] 
[ 
SerializeField &
]& '
private( /
Vector20 7
pos8 ;
;; <
[ 
SerializeField 
] 
private 
float "
rad# &
;& '
[

 
Header

 
(

 
$str

 
)

 
]

 
[

 
SerializeField

 (
]

( )
private

* 1
Vector2

2 9
	positionA

: C
;

C D
[ 
SerializeField 
] 
private 
Vector2 $
	positionB% .
;. /
[ 
SerializeField 
] 
private 
Vector2 $
	positionC% .
;. /
[ 
Header 
( 
$str 
) 
] 
[ 
SerializeField &
]& '
private( /
Camera0 6
cam7 :
;: ;
[ 
SerializeField 
] 
private 
float "
rayLen# )
;) *
private 
void 
Update 
( 
) 
{ 
Vector3 
mousePos 
= 
cam 
. 
ScreenToWorldPoint 1
(1 2
new2 5
Vector36 =
(= >
Input> C
.C D
mousePositionD Q
.Q R
xR S
,S T
InputU Z
.Z [
mousePosition[ h
.h i
yi j
,j k
cam 
. 
	transform 
. 
position "
." #
z# $
*% &
-' (
$num( )
)) *
)* +
;+ ,
float 
dir 
= 
MovementHelper "
." #
GetAngleInDegrees# 4
(4 5
pos5 8
,8 9
mousePos: B
)B C
;C D
Vector2 
	vectorDir 
= 
new 
(  
Mathf  %
.% &
Sin& )
() *
dir* -
*. /
Mathf0 5
.5 6
Deg2Rad6 =
)= >
,> ?
Mathf@ E
.E F
CosF I
(I J
dirJ M
*N O
MathfP U
.U V
Deg2RadV ]
)] ^
)^ _
;_ `
Vector2 
endPos 
= 
pos 
+ 
	vectorDir (
*) *
rayLen+ 1
;1 2
using 
( 
Draw 
. 
Command 
( 
cam 
)  
)  !
{" #
Draw 
. 
LineGeometry 
= 
LineGeometry  ,
., -
Volumetric3D- 9
;9 :
Draw 
. 
ThicknessSpace 
=  !
ThicknessSpace" 0
.0 1
Pixels1 7
;7 8
Draw 
. 
	Thickness 
= 
$num 
; 
Draw   
.   
Line   
(   
pos   
,   
endPos   !
,  ! "
Color  # (
.  ( )
gray  ) -
,  - .
Color  / 4
.  4 5
gray  5 9
)  9 :
;  : ;
Draw"" 
."" 
Triangle"" 
("" 
	positionA"" #
,""# $
	positionB""% .
,"". /
	positionC""0 9
,""9 :
Color""; @
.""@ A
white""A F
)""F G
;""G H
Draw## 
.## 
Disc## 
(## 
pos## 
,## 
rad## 
,## 

DiscColors##  *
.##* +
Flat##+ /
(##/ 0
Color##0 5
.##5 6
white##6 ;
)##; <
)##< =
;##= >
}$$ 	
DoesIntersect&& 
(&& 
	vectorDir&& 
)&&  
;&&  !
}'' 
private)) 
void)) 
DoesIntersect)) 
()) 
Vector2)) &
dir))' *
)))* +
{)), -
Vector3** 
edgeAB** 
=** 
	positionB** "
-**# $
	positionA**% .
;**. /
Vector3++ 
edgeAC++ 
=++ 
	positionC++ "
-++# $
	positionA++% .
;++. /
Vector3,, 
normalVector,, 
=,, 
Vector3,, &
.,,& '
Cross,,' ,
(,,, -
edgeAB,,- 3
,,,3 4
edgeAC,,5 ;
),,; <
;,,< =
Vector3-- 
ao-- 
=-- 
pos-- 
--- 
	positionA-- $
;--$ %
Vector3.. 
dao.. 
=.. 
Vector3.. 
... 
Cross.. #
(..# $
ao..$ &
,..& '
dir..( +
)..+ ,
;.., -
float00 
determinant00 
=00 
-00 
Vector300 $
.00$ %
Dot00% (
(00( )
dir00) ,
,00, -
normalVector00. :
)00: ;
;00; <
float11 
invDet11 
=11 
$num11 
/11 
determinant11 &
;11& '
float33 
dst33 
=33 
Vector333 
.33 
Dot33 
(33  
ao33  "
,33" #
normalVector33$ 0
)330 1
*332 3
invDet334 :
;33: ;
float44 
u44 
=44 
Vector344 
.44 
Dot44 
(44 
edgeAC44 $
,44$ %
dao44& )
)44) *
*44+ ,
invDet44- 3
;443 4
float55 
v55 
=55 
-55 
Vector355 
.55 
Dot55 
(55 
edgeAB55 %
,55% &
dao55' *
)55* +
*55, -
invDet55. 4
;554 5
float66 
w66 
=66 
$num66 
-66 
u66 
-66 
v66 
;66 
Debug88 
.88 
Log88 
(88 
normalVector88 
+88  
$str88! %
+88& '
dir88( +
)88+ ,
;88, -
if:: 

(:: 
determinant:: 
<:: 
$num:: 
||:: !
dst::" %
<::& '
$num::( )
||::* ,
u::- .
<::/ 0
$num::1 2
||::3 5
v::6 7
<::8 9
$num::: ;
||::< >
w::? @
<::A B
$num::C D
)::D E
return::F L
;::L M
Vector3<< 
p1<< 
=<< 
pos<< 
+<< 
dir<< 
*<<  
dst<<! $
;<<$ %
using>> 
(>> 
Draw>> 
.>> 
Command>> 
(>> 
cam>> 
)>>  
)>>  !
Draw>>" &
.>>& '
Disc>>' +
(>>+ ,
p1>>, .
,>>. /
rad>>0 3
,>>3 4

DiscColors>>5 ?
.>>? @
Flat>>@ D
(>>D E
Color>>E J
.>>J K
red>>K N
)>>N O
)>>O P
;>>P Q
}?? 
}@@ ø4
kC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\Objects\RayTracingMesh.cs
[ 
ExecuteAlways 
] 
public 
class 
RayTracingMesh 
: 
MonoBehaviour +
{, -
private 
static 
readonly 
int 

Glossiness  *
=+ ,
Shader- 3
.3 4
PropertyToID4 @
(@ A
$strA N
)N O
;O P
public 

RayTracingMaterial 
material &
;& '
public

 

readonly

 
List

 
<

 
Triangle

 !
>

! "
	triangles

# ,
=

- .
new

/ 2
(

2 3
)

3 4
;

4 5
private 
Material 
mat 
; 
private 
Mesh 
mesh 
; 
private 
void 
Start 
( 
) 
=> 
UpdateMeshData *
(* +
)+ ,
;, -
private 
void 
Update 
( 
) 
{ 
if 

( 
mat 
== 
null 
) 
mat 
= 
new "
Material# +
(+ ,
Shader, 2
.2 3
Find3 7
(7 8
$str8 B
)B C
)C D
;D E
mat 
. 
color 
= 
material 
. 
color "
;" #
mat 
. 
SetFloat 
( 

Glossiness 
,  
material! )
.) *

smoothness* 4
)4 5
;5 6
GetComponent 
< 
MeshRenderer !
>! "
(" #
)# $
.$ %
material% -
=. /
mat0 3
;3 4
} 
public 

void 
UpdateMeshData 
( 
)  
{! "
	triangles 
. 
Clear 
( 
) 
; 
mesh 
= 
GetComponent 
< 

MeshFilter &
>& '
(' (
)( )
.) *

sharedMesh* 4
;4 5
Vector3 
[ 
] 
vertices 
= 
mesh !
.! "
vertices" *
;* +
Vector3 
[ 
] 
normals 
= 
mesh  
.  !
normals! (
;( )
int 
[ 
] 
indices 
= 
mesh 
. 
	triangles &
;& '
Triangle!! 
triangle!! 
=!! 
new!! 
(!!  
)!!  !
;!!! "
for"" 
("" 
int"" 
i"" 
="" 
$num"" 
;"" 
i"" 
<"" 
indices"" #
.""# $
Length""$ *
;""* +
i"", -
+="". 0
$num""1 2
)""2 3
{""4 5
int## 
a## 
=## 
indices## 
[## 
i## 
]## 
;## 
int$$ 
b$$ 
=$$ 
indices$$ 
[$$ 
i$$ 
+$$ 
$num$$  !
]$$! "
;$$" #
int%% 
c%% 
=%% 
indices%% 
[%% 
i%% 
+%% 
$num%%  !
]%%! "
;%%" #
triangle'' 
.'' 
posA'' 
='' 
LocalToWorld'' (
(''( )
vertices'') 1
[''1 2
a''2 3
]''3 4
)''4 5
;''5 6
triangle(( 
.(( 
normalA(( 
=(( 
normals(( &
[((& '
a((' (
]((( )
;(() *
triangle** 
.** 
posB** 
=** 
LocalToWorld** (
(**( )
vertices**) 1
[**1 2
b**2 3
]**3 4
)**4 5
;**5 6
triangle++ 
.++ 
normalB++ 
=++ 
normals++ &
[++& '
b++' (
]++( )
;++) *
triangle-- 
.-- 
posC-- 
=-- 
LocalToWorld-- (
(--( )
vertices--) 1
[--1 2
c--2 3
]--3 4
)--4 5
;--5 6
triangle.. 
... 
normalC.. 
=.. 
normals.. &
[..& '
c..' (
]..( )
;..) *
	triangles// 
.// 
Add// 
(// 
triangle// "
)//" #
;//# $
triangle00 
=00 
new00 
Triangle00 #
(00# $
)00$ %
;00% &
}11 	
}22 
private44 
Vector344 
LocalToWorld44  
(44  !
Vector344! (
vertex44) /
)44/ 0
{441 2
Vector355 
objectPosition55 
=55  
	transform55! *
.55* +
position55+ 3
;553 4

Quaternion66 
objectRotation66 !
=66" #
	transform66$ -
.66- .
rotation66. 6
;666 7
Vector377 
objectScale77 
=77 
	transform77 '
.77' (

lossyScale77( 2
;772 3
Vector3:: 
scaledVertex:: 
=:: 
Vector3:: &
.::& '
Scale::' ,
(::, -
vertex::- 3
,::3 4
objectScale::5 @
)::@ A
;::A B
Vector3== 
rotatedVertex== 
=== 
objectRotation==  .
*==/ 0
scaledVertex==1 =
;=== >
Vector3@@ 
worldVertex@@ 
=@@ 
objectPosition@@ ,
+@@- .
rotatedVertex@@/ <
;@@< =
returnBB 
worldVertexBB 
;BB 
}CC 
publicEE 

structEE 
TriangleEE 
{EE 
publicFF 
Vector3FF 
posAFF 
,FF 
posBFF !
,FF! "
posCFF# '
;FF' (
publicGG 
Vector3GG 
normalAGG 
,GG 
normalBGG  '
,GG' (
normalCGG) 0
;GG0 1
}HH 
}II ¿#
bC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\Tests\CamTest.cs
[ 
ExecuteAlways 
] 
public 
class 
CamTest 
: 
MonoBehaviour $
{% &
[		 
SerializeField		 
]		 
private		 
bool		 !
run		" %
;		% &
[

 
SerializeField

 
]

 
private

 
Vector2

 $
debugPointCount

% 4
;

4 5
[ 
SerializeField 
] 
private 
float "
radius# )
;) *
private 
Camera 
cam 
; 
private 
void 
Start 
( 
) 
{ 
cam 
= 
Camera 
. 
main 
; 
} 
private 
void 
Update 
( 
) 
{ 
if 

( 
! 
run 
) 
return 
; 
	Transform 
camT 
= 
cam 
. 
	transform &
;& '
float 
planeHeight 
= 
cam 
.  
nearClipPlane  -
*. /
Mathf0 5
.5 6
Tan6 9
(9 :
cam: =
.= >
fieldOfView> I
*J K
$numL P
*Q R
MathfS X
.X Y
Deg2RadY `
)` a
*b c
$numd e
;e f
float 

planeWidth 
= 
planeHeight &
*' (
cam) ,
., -
aspect- 3
;3 4
Vector3 
bottomLeftLocal 
=  !
new" %
Vector3& -
(- .
-. /

planeWidth/ 9
/: ;
$num< =
,= >
-? @
planeHeight@ K
/L M
$numN O
,O P
camQ T
.T U
nearClipPlaneU b
)b c
;c d
for 
( 
int 
x 
= 
$num 
; 
x 
< 
debugPointCount +
.+ ,
x, -
;- .
x/ 0
++0 2
)2 3
{4 5
for   
(   
int   
y   
=   
$num   
;   
y   
<   
debugPointCount    /
.  / 0
y  0 1
;  1 2
y  3 4
++  4 6
)  6 7
{  8 9
float!! 
tx!! 
=!! 
x!! 
/!! 
(!!  
debugPointCount!!  /
.!!/ 0
x!!0 1
-!!2 3
$num!!4 6
)!!6 7
;!!7 8
float"" 
ty"" 
="" 
y"" 
/"" 
(""  
debugPointCount""  /
.""/ 0
y""0 1
-""2 3
$num""4 6
)""6 7
;""7 8
Vector3$$ 

pointLocal$$ "
=$$# $
bottomLeftLocal$$% 4
+$$5 6
new$$7 :
Vector3$$; B
($$B C

planeWidth$$C M
*$$N O
tx$$P R
,$$R S
planeHeight$$T _
*$$` a
ty$$b d
)$$d e
;$$e f
Vector3%% 
point%% 
=%% 
camT%%  $
.%%$ %
position%%% -
+%%. /
camT%%0 4
.%%4 5
right%%5 :
*%%; <

pointLocal%%= G
.%%G H
x%%H I
+%%J K
camT%%L P
.%%P Q
up%%Q S
*%%T U

pointLocal%%V `
.%%` a
y%%a b
+%%c d
camT%%e i
.%%i j
forward%%j q
*%%r s

pointLocal%%t ~
.%%~ 
z	%% 
;
%% 
using'' 
('' 
Draw'' 
.'' 
Command'' #
(''# $
cam''% (
)'') *
)''* +
Draw'', 0
.''0 1
Sphere''1 7
(''7 8
point''8 =
,''= >
radius''? E
,''E F
Color''G L
.''L M
white''M R
)''R S
;''S T
}(( 
})) 	
}** 
}++ Ó
eC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\Tests\Screenshot.cs
public 
class 

Screenshot 
: 
MonoBehaviour '
{( )
public 

void 
TakeScreenshot 
( 
)  
{! "
string 
	directory 
= 
Application &
.& '
dataPath' /
+0 1
$str2 <
;< =
if		 

(		 
!		 
	Directory		 
.		 
Exists		 
(		 
	directory		 '
)		' (
)		( )
	Directory		* 3
.		3 4
CreateDirectory		4 C
(		C D
	directory		D M
)		M N
;		N O
string 
fileName 
= 
$str "
+# $
DateTime% -
.- .
Now. 1
.1 2
ToString2 :
(: ;
$str; P
)P Q
+R S
$strT Z
;Z [
string 
filePath 
= 
Path 
. 
Combine &
(& '
	directory' 0
,0 1
fileName2 :
): ;
;; <
ScreenCapture 
. 
CaptureScreenshot '
(' (
filePath( 0
)0 1
;1 2
Debug 
. 
Log 
( 
$str &
+' (
filePath) 1
)1 2
;2 3
} 
} ä
cC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\MovementHelper.cs
	namespace 	
Helpers
 
; 
public 
static 
class 
MovementHelper "
{# $
public 

static 
Vector2  
GetResultingPosition .
(. /
Vector2/ 6
startPosition7 D
,D E
floatF K
angleDegreesL X
,X Y
floatZ _
distance` h
)h i
{j k
float 
angleRadians 
= 
( 
$num  
-! "
angleDegrees# /
)/ 0
*1 2
Mathf3 8
.8 9
Deg2Rad9 @
;@ A
float

 
deltaX

 
=

 
Mathf

 
.

 
Cos

  
(

  !
angleRadians

! -
)

- .
*

/ 0
distance

1 9
;

9 :
float 
deltaY 
= 
Mathf 
. 
Sin  
(  !
angleRadians! -
)- .
*/ 0
distance1 9
;9 :
Vector2 
resultingPosition !
=" #
startPosition$ 1
+2 3
new4 7
Vector28 ?
(? @
deltaX@ F
,F G
deltaYH N
)N O
;O P
return 
resultingPosition  
;  !
} 
public 

static 
float 
GetAngleInDegrees )
() *
Vector2* 1
point12 8
,8 9
Vector2: A
point2B H
)H I
{J K
Vector2 
	direction 
= 
point2 "
-# $
point1% +
;+ ,
float 
angleRadians 
= 
Mathf "
." #
Atan2# (
(( )
	direction) 2
.2 3
x3 4
,4 5
	direction6 ?
.? @
y@ A
)A B
;B C
float 
angleDegrees 
= 
angleRadians )
** +
Mathf, 1
.1 2
Rad2Deg2 9
;9 :
if 

( 
angleDegrees 
< 
$num 
) 
{ 	
angleDegrees   
+=   
$num   
;    
}!! 	
return## 
angleDegrees## 
;## 
}$$ 
}%% µ	
oC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\Objects\RayTracingMaterial.cs
[ 
Serializable 
] 
public 
struct 
RayTracingMaterial  
{! "
[ 
Header 
( 
$str 
) 
] 
public 

Color 
color 
; 
public 

Color 
emissionColor 
; 
public		 

Color		 
specularColor		 
;		 
[ 
Header 
( 
$str 
) 
] 
public 

float 
emissionStrength !
;! "
[ 
Range 

(
 
$num 
, 
$num 
) 
] 
public 
float 

smoothness )
;) *
[ 
Range 

(
 
$num 
, 
$num 
) 
] 
public 
float 
specularProbability 2
;2 3
} 
iC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\Objects\SphereObject.cs
[ 
ExecuteAlways 
] 
public 
class 
SphereObject 
: 
MonoBehaviour )
{* +
private 
static 
readonly 
int 

Glossiness  *
=+ ,
Shader- 3
.3 4
PropertyToID4 @
(@ A
$strA N
)N O
;O P
public 

RayTracingMaterial 
material &
;& '
private		 
Material		 
mat		 
;		 
private 
void 
Update 
( 
) 
{ 
if 

( 
mat 
== 
null 
) 
mat 
= 
new "
Material# +
(+ ,
Shader, 2
.2 3
Find3 7
(7 8
$str8 B
)B C
)C D
;D E
mat 
. 
color 
= 
material 
. 
color "
;" #
mat 
. 
SetFloat 
( 

Glossiness 
,  
material! )
.) *

smoothness* 4
)4 5
;5 6
GetComponent 
< 
MeshRenderer !
>! "
(" #
)# $
.$ %
material% -
=. /
mat0 3
;3 4
} 
} 
iC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\Tests\ShaderRenderer.cs
[ 
ExecuteAlways 
] 
public 
class 
ShaderRenderer 
: 
MonoBehaviour +
{, -
[ 
SerializeField 
] 
private 
Shader #
shader$ *
;* +
private 
Material 
rayTracingMat "
;" #
private		 
void		 
Start		 
(		 
)		 
=>		 
rayTracingMat		 )
=		* +
new		, /
Material		0 8
(		8 9
shader		9 ?
)		? @
;		@ A
private 
void 
OnRenderImage 
( 
RenderTexture ,
source- 3
,3 4
RenderTexture5 B
destinationC N
)N O
{P Q
if 

( 
Camera 
. 
current 
. 
name 
!=  "
$str# 0
)0 1
Graphics2 :
.: ;
Blit; ?
(? @
null@ D
,D E
destinationF Q
,Q R
rayTracingMatS `
)` a
;a b
else 
Graphics 
. 
Blit 
( 
source !
,! "
destination# .
). /
;/ 0
} 
} ·
oC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\Managers\RayTracingManager.cs
	namespace 	
Managers
 
; 
[ 
ExecuteAlways 
] 
[ )
ImageEffectAllowedInSceneView 
] 
public 
class 
RayTracingManager 
:  
MonoBehaviour! .
{/ 0
private 
static 
readonly 
int 
Spheres  '
=( )
Shader* 0
.0 1
PropertyToID1 =
(= >
$str> G
)G H
;H I
private 
static 
readonly 
int 
	Triangles  )
=* +
Shader, 2
.2 3
PropertyToID3 ?
(? @
$str@ K
)K L
;L M
private 
static 
readonly 
int 
AllMeshInfo  +
=, -
Shader. 4
.4 5
PropertyToID5 A
(A B
$strB O
)O P
;P Q
private 
static 
readonly 
int 
NumOfSpheres  ,
=- .
Shader/ 5
.5 6
PropertyToID6 B
(B C
$strC Q
)Q R
;R S
private 
static 
readonly 
int 
BounceCount  +
=, -
Shader. 4
.4 5
PropertyToID5 A
(A B
$strB R
)R S
;S T
private 
static 
readonly 
int 
RaysPerPixel  ,
=- .
Shader/ 5
.5 6
PropertyToID6 B
(B C
$strC T
)T U
;U V
private 
static 
readonly 
int 
RenderedFrames  .
=/ 0
Shader1 7
.7 8
PropertyToID8 D
(D E
$strE X
)X Y
;Y Z
private 
static 
readonly 
int 
	Intensity  )
=* +
Shader, 2
.2 3
PropertyToID3 ?
(? @
$str@ N
)N O
;O P
private 
static 
readonly 
int 
Focus  %
=& '
Shader( .
.. /
PropertyToID/ ;
(; <
$str< F
)F G
;G H
private 
static 
readonly 
int 
ColorHorizon  ,
=- .
Shader/ 5
.5 6
PropertyToID6 B
(B C
$strC T
)T U
;U V
private 
static 
readonly 
int 
ColorZenith  +
=, -
Shader. 4
.4 5
PropertyToID5 A
(A B
$strB R
)R S
;S T
private 
static 
readonly 
int 
GroundColor1  ,
=- .
Shader/ 5
.5 6
PropertyToID6 B
(B C
$strC P
)P Q
;Q R
private 
static 
readonly 
int 

ViewParams  *
=+ ,
Shader- 3
.3 4
PropertyToID4 @
(@ A
$strA M
)M N
;N O
private 
static 
readonly 
int !
CamLocalToWorldMatrix  5
=6 7
Shader8 >
.> ?
PropertyToID? K
(K L
$strL c
)c d
;d e
private 
static 
readonly 
int 
Frames  &
=' (
Shader) /
./ 0
PropertyToID0 <
(< =
$str= Q
)Q R
;R S
private 
static 
readonly 
int 
	PrevFrame  )
=* +
Shader, 2
.2 3
PropertyToID3 ?
(? @
$str@ L
)L M
;M N
private 
static 
readonly 
int 
	NumMeshes  )
=* +
Shader, 2
.2 3
PropertyToID3 ?
(? @
$str@ K
)K L
;L M
private   
static   
readonly   
int   
UseEnvironment    .
=  / 0
Shader  1 7
.  7 8
PropertyToID  8 D
(  D E
$str  E U
)  U V
;  V W
private!! 
static!! 
readonly!! 
int!! 
Strength!!  (
=!!) *
Shader!!+ 1
.!!1 2
PropertyToID!!2 >
(!!> ?
$str!!? P
)!!P Q
;!!Q R
private"" 
static"" 
readonly"" 
int"" 
DefocusStrength1""  0
=""1 2
Shader""3 9
.""9 :
PropertyToID"": F
(""F G
$str""G X
)""X Y
;""Y Z
[$$ 
Header$$ 
($$ 
$str$$ 
)$$ 
]$$ 
[%% 
SerializeField%% 
]%% 
private%% 
Shader%% #
rayTracingShader%%$ 4
;%%4 5
['' 
SerializeField'' 
]'' 
private'' 
Shader'' #
companionShader''$ 3
;''3 4
[(( 
SerializeField(( 
](( 
private(( 
Camera(( #
mainCam(($ +
;((+ ,
[** 
Header** 
(** 
$str** 
)** 
]** 
[++ 
SerializeField++ 
]++ 
private++ 
bool++ ! 
useShaderInSceneView++" 6
;++6 7
[-- 
SerializeField-- 
]-- 
[-- 
Range-- 
(-- 
$num-- 
,-- 
$num-- !
)--! "
]--" #
private--$ +
int--, /
MaxBounceCount--0 >
;--> ?
[.. 
SerializeField.. 
].. 
[.. 
Range.. 
(.. 
$num.. 
,.. 
$num.. !
)..! "
].." #
private..$ +
int.., /
NumRaysPerPixel..0 ?
;..? @
[// 
SerializeField// 
]// 
[// 
Min// 
(// 
$num// 
)// 
]// 
private// %
float//& +
DivergeStrength//, ;
;//; <
[00 
SerializeField00 
]00 
[00 
Min00 
(00 
$num00 
)00 
]00 
private00 %
float00& +
DefocusStrength00, ;
;00; <
[11 
SerializeField11 
]11 
[11 
Min11 
(11 
$num11 
)11 
]11  
private11! (
float11) .
FocusDistance11/ <
;11< =
[22 
SerializeField22 
]22 
[22 
Min22 
(22 
$num22 
)22 
]22  
private22! (
float22) .
RenderDistance22/ =
;22= >
[44 
Header44 
(44 
$str44 
)44 
]44 
[55 
SerializeField55 
]55 
private55 
bool55 !
environment55" -
;55- .
[77 
SerializeField77 
]77 
private77 
bool77 !
visualizeFocus77" 0
;770 1
[99 
SerializeField99 
]99 
private99 
Color99 "
SkyColorHorizon99# 2
;992 3
[:: 
SerializeField:: 
]:: 
private:: 
Color:: "
SkyColorZenith::# 1
;::1 2
[;; 
SerializeField;; 
];; 
private;; 
Color;; "
GroundColor;;# .
;;;. /
[<< 
SerializeField<< 
]<< 
private<< 
float<< "
SunFocus<<# +
;<<+ ,
[== 
SerializeField== 
]== 
private== 
float== "
SunIntensity==# /
;==/ 0
private?? 
Material?? 
companionMat?? !
;??! "
privateAA 
RenderTextureAA 
currentTextureAA (
;AA( )
privateCC 
boolCC 
initCC 
;CC 
privateDD 
RayTracingMeshDD 
[DD 
]DD 
meshesDD #
;DD# $
privateEE 
ComputeBufferEE 

meshReaderEE $
;EE$ %
privateGG 
intGG 
NumRenderedFramesGG !
;GG! "
privateII 
MaterialII 
rayTracingMatII "
;II" #
privateKK 
ComputeBufferKK 
sphereReaderKK &
;KK& '
privateMM 
SphereObjectMM 
[MM 
]MM 
spheresMM "
;MM" #
privateNN 
ComputeBufferNN 
triangleReaderNN (
;NN( )
privateOO 
staticOO 
readonlyOO 
intOO 
DistanceOO  (
=OO) *
ShaderOO+ 1
.OO1 2
PropertyToIDOO2 >
(OO> ?
$strOO? O
)OOO P
;OOP Q
privateQQ 
voidQQ 
StartQQ 
(QQ 
)QQ 
=>QQ 
InitShadersQQ '
(QQ' (
)QQ( )
;QQ) *
privateSS 
voidSS 
	OnDestroySS 
(SS 
)SS 
{SS 

meshReaderTT 
?TT 
.TT 
ReleaseTT 
(TT 
)TT 
;TT 
sphereReaderUU 
?UU 
.UU 
ReleaseUU 
(UU 
)UU 
;UU  
triangleReaderVV 
?VV 
.VV 
ReleaseVV 
(VV  
)VV  !
;VV! "

meshReaderWW 
?WW 
.WW 
DisposeWW 
(WW 
)WW 
;WW 
sphereReaderXX 
?XX 
.XX 
DisposeXX 
(XX 
)XX 
;XX  
triangleReaderYY 
?YY 
.YY 
DisposeYY 
(YY  
)YY  !
;YY! "
}ZZ 
private\\ 
void\\ 
OnRenderImage\\ 
(\\ 
RenderTexture\\ ,
src\\- 0
,\\0 1
RenderTexture\\2 ?
target\\@ F
)\\F G
{\\H I
if]] 

(]] 
!]] 
init]] 
)]] 
Init]] 
(]] 
src]] 
)]] 
;]] 
if__ 

(__ 
visualizeFocus__ 
)__ 
{__ 
Camera`` 
cam`` 
=``  
useShaderInSceneView`` -
?``. /
Camera``0 6
.``6 7
current``7 >
:``? @
mainCam``A H
;``H I
floatbb 
frustumHeightbb 
=bb  !
$numbb" &
*bb' (
Mathfbb) .
.bb. /
Tanbb/ 2
(bb2 3
cambb3 6
.bb6 7
fieldOfViewbb7 B
*bbC D
$numbbE I
*bbJ K
MathfbbL Q
.bbQ R
Deg2RadbbR Y
)bbY Z
*bb[ \
FocusDistancebb] j
;bbj k
floatcc 
frustumWidthcc 
=cc  
frustumHeightcc! .
*cc/ 0
camcc1 4
.cc4 5
aspectcc5 ;
;cc; <
Vector3ee 
topLeftFrustumLineee &
=ee' (
camee) ,
.ee, -
	transformee- 6
.ee6 7
positionee7 ?
+ee@ A
cameeB E
.eeE F
	transformeeF O
.eeO P
righteeP U
*eeV W
(eeX Y
-eeY Z
frustumWidtheeZ f
*eeg h
$numeei m
)eem n
+eeo p
camff 
.ff 
	transformff 
.ff 
upff  
*ff! "
(ff# $
frustumHeightff$ 1
*ff2 3
$numff4 8
)ff8 9
+ff: ;
camff< ?
.ff? @
	transformff@ I
.ffI J
forwardffJ Q
*ffR S
FocusDistanceffT a
;ffa b
Vector3hh 
topRightFrustumLinehh '
=hh( )
camhh* -
.hh- .
	transformhh. 7
.hh7 8
positionhh8 @
+hhA B
camhhC F
.hhF G
	transformhhG P
.hhP Q
righthhQ V
*hhW X
(hhY Z
frustumWidthhhZ f
*hhg h
$numhhi m
)hhm n
+hho p
camii 
.ii 
	transformii 
.ii 
upii  
*ii! "
(ii# $
frustumHeightii$ 1
*ii2 3
$numii4 8
)ii8 9
+ii: ;
camii< ?
.ii? @
	transformii@ I
.iiI J
forwardiiJ Q
*iiR S
FocusDistanceiiT a
;iia b
Vector3kk "
bottomRightFrustumLinekk *
=kk+ ,
camkk- 0
.kk0 1
	transformkk1 :
.kk: ;
positionkk; C
+kkD E
camkkF I
.kkI J
	transformkkJ S
.kkS T
rightkkT Y
*kkZ [
(kk\ ]
frustumWidthkk] i
*kkj k
$numkkl p
)kkp q
-kkr s
camll 
.ll 
	transformll 
.ll 
upll  
*ll! "
(ll# $
frustumHeightll$ 1
*ll2 3
$numll4 8
)ll8 9
+ll: ;
camll< ?
.ll? @
	transformll@ I
.llI J
forwardllJ Q
*llR S
FocusDistancellT a
;lla b
Vector3nn !
bottomLeftFrustumLinenn )
=nn* +
camnn, /
.nn/ 0
	transformnn0 9
.nn9 :
positionnn: B
+nnC D
camnnE H
.nnH I
	transformnnI R
.nnR S
rightnnS X
*nnY Z
(nn[ \
-nn\ ]
frustumWidthnn] i
*nnj k
$numnnl p
)nnp q
-nnr s
camoo 
.oo 
	transformoo 
.oo 
upoo  
*oo! "
(oo# $
frustumHeightoo$ 1
*oo2 3
$numoo4 8
)oo8 9
+oo: ;
camoo< ?
.oo? @
	transformoo@ I
.ooI J
forwardooJ Q
*ooR S
FocusDistanceooT a
;ooa b
ifqq 
(qq 
Cameraqq 
.qq 
currentqq 
.qq 
nameqq #
==qq$ &
$strqq' 4
)qq4 5
{qq6 7
usingrr 
(rr 
Drawrr 
.rr 
Commandrr #
(rr# $
Camerarr$ *
.rr* +
currentrr+ 2
)rr2 3
)rr3 4
{rr5 6
Colorss 
colorss 
=ss  !
Colorss" '
.ss' (
greenss( -
;ss- .
colortt 
.tt 
att 
=tt 
$numtt #
;tt# $
Drawuu 
.uu 
Quaduu 
(uu 
topRightFrustumLineuu 1
,uu1 2
topLeftFrustumLineuu3 E
,uuE F!
bottomLeftFrustumLineuuG \
,uu\ ]"
bottomRightFrustumLineuu^ t
,uut u
coloruuv {
)uu{ |
;uu| }
}vv 
}ww 
}xx 	
ifzz 

(zz  
useShaderInSceneViewzz  
&&zz! #
!zz$ %
Applicationzz% 0
.zz0 1
	isPlayingzz1 :
)zz: ;
{zz< =
InitShaders{{ 
({{ 
){{ 
;{{ 
UpdateCameraParams}} 
(}} 
Camera}} %
.}}% &
current}}& -
)}}- .
;}}. / 
UpdateMaterialParams~~  
(~~  !
)~~! "
;~~" #
Graphics
 
.
 
Blit
 
(
 
null
 
,
 
target
  &
,
& '
rayTracingMat
( 5
)
5 6
;
6 7
}
 	
else

 
if
 
(
 
Camera
 
.
 
current
 !
.
! "
name
" &
!=
' )
$str
* 7
)
7 8
{
9 :
InitShaders
 
(
 
)
 
;
  
UpdateCameraParams
 
(
 
Camera
 %
.
% &
current
& -
)
- .
;
. /"
UpdateMaterialParams
  
(
  !
)
! "
;
" #
RenderTexture
 
prevFrameCopy
 '
=
( )
RenderTexture
* 7
.
7 8
GetTemporary
8 D
(
D E
src
E H
.
H I
width
I N
,
N O
src
P S
.
S T
height
T Z
,
Z [
$num
\ ]
,
] ^
GraphicsFormat
_ m
.
m n"
R32G32B32A32_SFloatn 
) 
; 
Graphics
 
.
 
Blit
 
(
 
currentTexture
 (
,
( )
prevFrameCopy
* 7
)
7 8
;
8 9
NumRenderedFrames
 
+=
  
Application
! ,
.
, -
	isPlaying
- 6
?
7 8
$num
9 :
:
; <
$num
= >
;
> ?"
UpdateMaterialParams
  
(
  !
)
! "
;
" #
RenderTexture
 
currentFrame
 &
=
' (
RenderTexture
) 6
.
6 7
GetTemporary
7 C
(
C D
src
D G
.
G H
width
H M
,
M N
src
O R
.
R S
height
S Y
,
Y Z
$num
[ \
,
\ ]
GraphicsFormat
^ l
.
l m"
R32G32B32A32_SFloatm 
) 
; 
Graphics
 
.
 
Blit
 
(
 
null
 
,
 
currentFrame
  ,
,
, -
rayTracingMat
. ;
)
; <
;
< =
companionMat
 
.
 
SetInt
 
(
  
Frames
  &
,
& '
NumRenderedFrames
( 9
)
9 :
;
: ;
companionMat
 
.
 

SetTexture
 #
(
# $
	PrevFrame
$ -
,
- .
prevFrameCopy
/ <
)
< =
;
= >
Graphics
 
.
 
Blit
 
(
 
currentFrame
 &
,
& '
currentTexture
( 6
,
6 7
companionMat
8 D
)
D E
;
E F
Graphics
 
.
 
Blit
 
(
 
currentTexture
 (
,
( )
target
* 0
)
0 1
;
1 2
RenderTexture
 
.
 
ReleaseTemporary
 *
(
* +
currentFrame
+ 7
)
7 8
;
8 9
RenderTexture
 
.
 
ReleaseTemporary
 *
(
* +
prevFrameCopy
+ 8
)
8 9
;
9 :
RenderTexture
 
.
 
ReleaseTemporary
 *
(
* +
currentFrame
+ 7
)
7 8
;
8 9
}
 	
else

 
Graphics
 
.
 
Blit
 
(
 
src
  
,
  !
target
" (
)
( )
;
) *
}
 
private
 
void
 
InitShaders
 
(
 
)
 
{
  
rayTracingMat
 
=
 
new
 
Material
 $
(
$ %
rayTracingShader
% 5
)
5 6
;
6 7
companionMat
 
=
 
new
 
Material
 #
(
# $
companionShader
$ 3
)
3 4
;
4 5

meshReader
 
?
 
.
 
Release
 
(
 
)
 
;
 
sphereReader
   
?
   
.
   
Release
   
(
   
)
   
;
    
triangleReader
¡¡ 
?
¡¡ 
.
¡¡ 
Release
¡¡ 
(
¡¡  
)
¡¡  !
;
¡¡! "

meshReader
¢¢ 
?
¢¢ 
.
¢¢ 
Dispose
¢¢ 
(
¢¢ 
)
¢¢ 
;
¢¢ 
sphereReader
££ 
?
££ 
.
££ 
Dispose
££ 
(
££ 
)
££ 
;
££  
triangleReader
¤¤ 
?
¤¤ 
.
¤¤ 
Dispose
¤¤ 
(
¤¤  
)
¤¤  !
;
¤¤! "
meshes
¦¦ 
=
¦¦ 
FindObjectsOfType
¦¦ "
<
¦¦" #
RayTracingMesh
¦¦# 1
>
¦¦1 2
(
¦¦2 3
)
¦¦3 4
;
¦¦4 5
foreach
§§ 
(
§§ 
RayTracingMesh
§§ 
mesh
§§  $
in
§§% '
meshes
§§( .
)
§§. /
mesh
§§0 4
.
§§4 5
UpdateMeshData
§§5 C
(
§§C D
)
§§D E
;
§§E F
int
¨¨ 
size
¨¨ 
=
¨¨ 
meshes
¨¨ 
.
¨¨ 
Sum
¨¨ 
(
¨¨ 
mesh
¨¨ "
=>
¨¨# %
mesh
¨¨& *
.
¨¨* +
	triangles
¨¨+ 4
.
¨¨4 5
Count
¨¨5 :
)
¨¨: ;
;
¨¨; <
if
ªª 

(
ªª 
size
ªª 
>
ªª 
$num
ªª 
)
ªª 
{
ªª 
const
«« 
int
«« 
triangleSize
«« "
=
««# $
sizeof
««% +
(
««+ ,
float
««, 1
)
««1 2
*
««3 4
$num
««5 7
;
««7 8
const
¬¬ 
int
¬¬ 
meshSize
¬¬ 
=
¬¬  
sizeof
¬¬! '
(
¬¬' (
float
¬¬( -
)
¬¬- .
*
¬¬/ 0
$num
¬¬1 3
+
¬¬4 5
sizeof
¬¬6 <
(
¬¬< =
int
¬¬= @
)
¬¬@ A
*
¬¬B C
$num
¬¬D E
;
¬¬E F
triangleReader
­­ 
=
­­ 
new
­­  
ComputeBuffer
­­! .
(
­­. /
size
­­/ 3
,
­­3 4
triangleSize
­­5 A
)
­­A B
;
­­B C

meshReader
®® 
=
®® 
new
®® 
ComputeBuffer
®® *
(
®®* +
meshes
®®+ 1
.
®®1 2
Length
®®2 8
,
®®8 9
meshSize
®®: B
)
®®B C
;
®®C D
}
¯¯ 	
spheres
±± 
=
±± 
FindObjectsOfType
±± #
<
±±# $
SphereObject
±±$ 0
>
±±0 1
(
±±1 2
)
±±2 3
;
±±3 4
if
³³ 

(
³³ 
spheres
³³ 
.
³³ 
Length
³³ 
>
³³ 
$num
³³ 
)
³³ 
{
³³  !
const
´´ 
int
´´ 

sphereSize
´´  
=
´´! "
sizeof
´´# )
(
´´) *
float
´´* /
)
´´/ 0
*
´´1 2
$num
´´3 5
;
´´5 6
sphereReader
µµ 
=
µµ 
new
µµ 
ComputeBuffer
µµ ,
(
µµ, -
spheres
µµ- 4
.
µµ4 5
Length
µµ5 ;
,
µµ; <

sphereSize
µµ= G
)
µµG H
;
µµH I
}
¶¶ 	
}
·· 
private
¹¹ 
void
¹¹ 
Init
¹¹ 
(
¹¹ 
RenderTexture
¹¹ #
src
¹¹$ '
)
¹¹' (
{
¹¹) *
int
ºº 
width
ºº 
=
ºº 
src
ºº 
.
ºº 
width
ºº 
;
ºº 
int
»» 
height
»» 
=
»» 
src
»» 
.
»» 
height
»» 
;
»»  
int
¼¼ 
	depthMode
¼¼ 
=
¼¼ 
src
¼¼ 
.
¼¼ 
depth
¼¼ !
;
¼¼! "
GraphicsFormat
¾¾ 
format
¾¾ 
=
¾¾ 
src
¾¾  #
.
¾¾# $
graphicsFormat
¾¾$ 2
;
¾¾2 3
bool
ÀÀ 

useMipMaps
ÀÀ 
=
ÀÀ 
src
ÀÀ 
.
ÀÀ 
	useMipMap
ÀÀ '
;
ÀÀ' (
currentTexture
ÂÂ 
=
ÂÂ 
new
ÂÂ 
RenderTexture
ÂÂ *
(
ÂÂ* +
width
ÂÂ+ 0
,
ÂÂ0 1
height
ÂÂ2 8
,
ÂÂ8 9
	depthMode
ÂÂ: C
)
ÂÂC D
{
ÂÂE F
graphicsFormat
ÃÃ 
=
ÃÃ 
format
ÃÃ #
,
ÃÃ# $
enableRandomWrite
ÃÃ% 6
=
ÃÃ7 8
true
ÃÃ9 =
,
ÃÃ= >
autoGenerateMips
ÃÃ? O
=
ÃÃP Q
false
ÃÃR W
,
ÃÃW X
	useMipMap
ÃÃY b
=
ÃÃc d

useMipMaps
ÃÃe o
}
ÄÄ 	
;
ÄÄ	 

currentTexture
ÆÆ 
.
ÆÆ 
Create
ÆÆ 
(
ÆÆ 
)
ÆÆ 
;
ÆÆ  
init
ÈÈ 
=
ÈÈ 
true
ÈÈ 
;
ÈÈ 
}
ÉÉ 
private
ËË 
void
ËË  
UpdateCameraParams
ËË #
(
ËË# $
Camera
ËË$ *
cam
ËË+ .
)
ËË. /
{
ËË0 1
rayTracingMat
ÌÌ 
=
ÌÌ 
new
ÌÌ 
Material
ÌÌ $
(
ÌÌ$ %
rayTracingShader
ÌÌ% 5
)
ÌÌ5 6
;
ÌÌ6 7
companionMat
ÍÍ 
=
ÍÍ 
new
ÍÍ 
Material
ÍÍ #
(
ÍÍ# $
companionShader
ÍÍ$ 3
)
ÍÍ3 4
;
ÍÍ4 5
float
ÏÏ 
planeHeight
ÏÏ 
=
ÏÏ 
FocusDistance
ÏÏ )
*
ÏÏ* +
Mathf
ÏÏ, 1
.
ÏÏ1 2
Tan
ÏÏ2 5
(
ÏÏ5 6
cam
ÏÏ6 9
.
ÏÏ9 :
fieldOfView
ÏÏ: E
*
ÏÏF G
$num
ÏÏH L
*
ÏÏM N
Mathf
ÏÏO T
.
ÏÏT U
Deg2Rad
ÏÏU \
)
ÏÏ\ ]
*
ÏÏ^ _
$num
ÏÏ` a
;
ÏÏa b
float
ÐÐ 

planeWidth
ÐÐ 
=
ÐÐ 
planeHeight
ÐÐ &
*
ÐÐ' (
cam
ÐÐ) ,
.
ÐÐ, -
aspect
ÐÐ- 3
;
ÐÐ3 4
rayTracingMat
ÒÒ 
.
ÒÒ 
	SetVector
ÒÒ 
(
ÒÒ  

ViewParams
ÒÒ  *
,
ÒÒ* +
new
ÒÒ, /
Vector3
ÒÒ0 7
(
ÒÒ7 8

planeWidth
ÒÒ8 B
,
ÒÒB C
planeHeight
ÒÒD O
,
ÒÒO P
FocusDistance
ÒÒQ ^
)
ÒÒ^ _
)
ÒÒ_ `
;
ÒÒ` a
rayTracingMat
ÓÓ 
.
ÓÓ 
	SetMatrix
ÓÓ 
(
ÓÓ  #
CamLocalToWorldMatrix
ÓÓ  5
,
ÓÓ5 6
cam
ÓÓ7 :
.
ÓÓ: ;
	transform
ÓÓ; D
.
ÓÓD E 
localToWorldMatrix
ÓÓE W
)
ÓÓW X
;
ÓÓX Y
}
ÔÔ 
private
ÖÖ 
void
ÖÖ "
UpdateMaterialParams
ÖÖ %
(
ÖÖ% &
)
ÖÖ& '
{
ÖÖ( )
HandleSpheres
×× 
(
×× 
)
×× 
;
×× 
HandleMeshes
ØØ 
(
ØØ 
)
ØØ 
;
ØØ 
rayTracingMat
ÚÚ 
.
ÚÚ 
SetInt
ÚÚ 
(
ÚÚ 
BounceCount
ÚÚ (
,
ÚÚ( )
MaxBounceCount
ÚÚ* 8
)
ÚÚ8 9
;
ÚÚ9 :
rayTracingMat
ÛÛ 
.
ÛÛ 
SetInt
ÛÛ 
(
ÛÛ 
RaysPerPixel
ÛÛ )
,
ÛÛ) *
NumRaysPerPixel
ÛÛ+ :
)
ÛÛ: ;
;
ÛÛ; <
rayTracingMat
ÜÜ 
.
ÜÜ 
SetInt
ÜÜ 
(
ÜÜ 
RenderedFrames
ÜÜ +
,
ÜÜ+ ,
NumRenderedFrames
ÜÜ- >
)
ÜÜ> ?
;
ÜÜ? @
rayTracingMat
ÞÞ 
.
ÞÞ 
SetFloat
ÞÞ 
(
ÞÞ 
	Intensity
ÞÞ (
,
ÞÞ( )
SunIntensity
ÞÞ* 6
)
ÞÞ6 7
;
ÞÞ7 8
rayTracingMat
ßß 
.
ßß 
SetFloat
ßß 
(
ßß 
Focus
ßß $
,
ßß$ %
SunFocus
ßß& .
)
ßß. /
;
ßß/ 0
rayTracingMat
áá 
.
áá 
SetFloat
áá 
(
áá 
Strength
áá '
,
áá' (
DivergeStrength
áá) 8
)
áá8 9
;
áá9 :
rayTracingMat
ââ 
.
ââ 
SetFloat
ââ 
(
ââ 
DefocusStrength1
ââ /
,
ââ/ 0
DefocusStrength
ââ1 @
)
ââ@ A
;
ââA B
rayTracingMat
ãã 
.
ãã 
SetFloat
ãã 
(
ãã 
Distance
ãã '
,
ãã' (
RenderDistance
ãã) 7
)
ãã7 8
;
ãã8 9
rayTracingMat
åå 
.
åå 
SetColor
åå 
(
åå 
ColorHorizon
åå +
,
åå+ ,
SkyColorHorizon
åå- <
)
åå< =
;
åå= >
rayTracingMat
ææ 
.
ææ 
SetColor
ææ 
(
ææ 
ColorZenith
ææ *
,
ææ* +
SkyColorZenith
ææ, :
)
ææ: ;
;
ææ; <
rayTracingMat
çç 
.
çç 
SetColor
çç 
(
çç 
GroundColor1
çç +
,
çç+ ,
GroundColor
çç- 8
)
çç8 9
;
çç9 :
rayTracingMat
èè 
.
èè 
SetInt
èè 
(
èè 
UseEnvironment
èè +
,
èè+ ,
environment
èè- 8
?
èè9 :
$num
èè; <
:
èè= >
$num
èè? @
)
èè@ A
;
èèA B
}
éé 
private
ëë 
void
ëë 
HandleSpheres
ëë 
(
ëë 
)
ëë  
{
ëë! "
Sphere
ìì 
[
ìì 
]
ìì 
sphereArray
ìì 
=
ìì 
new
ìì "
Sphere
ìì# )
[
ìì) *
spheres
ìì* 1
.
ìì1 2
Length
ìì2 8
]
ìì8 9
;
ìì9 :
if
îî 

(
îî 
spheres
îî 
.
îî 
Length
îî 
==
îî 
$num
îî 
)
îî  
return
îî! '
;
îî' (
for
ðð 
(
ðð 
int
ðð 
i
ðð 
=
ðð 
$num
ðð 
;
ðð 
i
ðð 
<
ðð 
spheres
ðð #
.
ðð# $
Length
ðð$ *
;
ðð* +
i
ðð, -
++
ðð- /
)
ðð/ 0
{
ðð1 2
sphereArray
ññ 
[
ññ 
i
ññ 
]
ññ 
=
ññ 
new
ññ  
Sphere
ññ! '
{
ññ( )
position
òò 
=
òò 
spheres
òò "
[
òò" #
i
òò# $
]
òò$ %
.
òò% &

gameObject
òò& 0
.
òò0 1
	transform
òò1 :
.
òò: ;
position
òò; C
,
òòC D
radius
òòE K
=
òòL M
spheres
òòN U
[
òòU V
i
òòV W
]
òòW X
.
òòX Y

gameObject
òòY c
.
òòc d
	transform
òòd m
.
òòm n

localScale
òòn x
.
òòx y
x
òòy z
/
òò{ |
$num
òò} ~
,
òò~ 
material
óó 
=
óó 
spheres
óó "
[
óó" #
i
óó# $
]
óó$ %
.
óó% &
material
óó& .
}
ôô 
;
ôô 
}
õõ 	
sphereReader
÷÷ 
.
÷÷ 
SetData
÷÷ 
(
÷÷ 
sphereArray
÷÷ (
)
÷÷( )
;
÷÷) *
rayTracingMat
øø 
.
øø 
SetInt
øø 
(
øø 
NumOfSpheres
øø )
,
øø) *
sphereArray
øø+ 6
.
øø6 7
Length
øø7 =
)
øø= >
;
øø> ?
rayTracingMat
ùù 
.
ùù 
	SetBuffer
ùù 
(
ùù  
Spheres
ùù  '
,
ùù' (
sphereReader
ùù) 5
)
ùù5 6
;
ùù6 7
}
úú 
private
üü 
void
üü 
HandleMeshes
üü 
(
üü 
)
üü 
{
üü  !
foreach
ýý 
(
ýý 
RayTracingMesh
ýý 
mesh
ýý  $
in
ýý% '
meshes
ýý( .
)
ýý. /
mesh
ýý0 4
.
ýý4 5
UpdateMeshData
ýý5 C
(
ýýC D
)
ýýD E
;
ýýE F
int
ÿÿ 
size
ÿÿ 
=
ÿÿ 
meshes
ÿÿ 
.
ÿÿ 
Sum
ÿÿ 
(
ÿÿ 
mesh
ÿÿ "
=>
ÿÿ# %
mesh
ÿÿ& *
.
ÿÿ* +
	triangles
ÿÿ+ 4
.
ÿÿ4 5
Count
ÿÿ5 :
)
ÿÿ: ;
;
ÿÿ; <
if
 

(
 
size
 
==
 
$num
 
)
 
return
 
;
 
Triangle
 
[
 
]
 
triangleArray
  
=
! "
new
# &
Triangle
' /
[
/ 0
size
0 4
]
4 5
;
5 6
MeshInfo
 
[
 
]
 
	meshInfos
 
=
 
new
 "
MeshInfo
# +
[
+ ,
meshes
, 2
.
2 3
Length
3 9
]
9 :
;
: ;
int
 
triangleIndex
 
=
 
$num
 
;
 
for
 
(
 
int
 
i
 
=
 
$num
 
;
 
i
 
<
 
meshes
 "
.
" #
Length
# )
;
) *
i
+ ,
++
, .
)
. /
{
0 1
	meshInfos
 
[
 
i
 
]
 
.
 
numTriangles
 %
=
& '
meshes
( .
[
. /
i
/ 0
]
0 1
.
1 2
	triangles
2 ;
.
; <
Count
< A
;
A B
	meshInfos
 
[
 
i
 
]
 
.
 
material
 !
=
" #
meshes
$ *
[
* +
i
+ ,
]
, -
.
- .
material
. 6
;
6 7
	meshInfos
 
[
 
i
 
]
 
.
  
firstTriangleIndex
 +
=
, -
triangleIndex
. ;
;
; <
for
 
(
 
int
 
j
 
=
 
$num
 
;
 
j
 
<
 
meshes
  &
[
& '
i
' (
]
( )
.
) *
	triangles
* 3
.
3 4
Count
4 9
;
9 :
j
; <
++
< >
)
> ?
{
@ A
triangleArray
 
[
 
triangleIndex
 +
]
+ ,
=
- .
new
/ 2
Triangle
3 ;
{
< =
posA
 
=
 
meshes
 !
[
! "
i
" #
]
# $
.
$ %
	triangles
% .
[
. /
j
/ 0
]
0 1
.
1 2
posA
2 6
,
6 7
posB
8 <
=
= >
meshes
? E
[
E F
i
F G
]
G H
.
H I
	triangles
I R
[
R S
j
S T
]
T U
.
U V
posB
V Z
,
Z [
posC
\ `
=
a b
meshes
c i
[
i j
i
j k
]
k l
.
l m
	triangles
m v
[
v w
j
w x
]
x y
.
y z
posC
z ~
,
~ 
normalA
 
=
 
meshes
 $
[
$ %
i
% &
]
& '
.
' (
	triangles
( 1
[
1 2
j
2 3
]
3 4
.
4 5
normalA
5 <
,
< =
normalB
> E
=
F G
meshes
H N
[
N O
i
O P
]
P Q
.
Q R
	triangles
R [
[
[ \
j
\ ]
]
] ^
.
^ _
normalB
_ f
,
f g
normalC
 
=
 
meshes
 $
[
$ %
i
% &
]
& '
.
' (
	triangles
( 1
[
1 2
j
2 3
]
3 4
.
4 5
normalC
5 <
}
 
;
 
triangleIndex
 
++
 
;
  
}
 
}
 	
triangleReader
 
.
 
SetData
 
(
 
triangleArray
 ,
)
, -
;
- .

meshReader
 
.
 
SetData
 
(
 
	meshInfos
 $
)
$ %
;
% &
rayTracingMat
 
.
 
SetInt
 
(
 
	NumMeshes
 &
,
& '
	meshInfos
( 1
.
1 2
Length
2 8
)
8 9
;
9 :
rayTracingMat
 
.
 
	SetBuffer
 
(
  
	Triangles
  )
,
) *
triangleReader
+ 9
)
9 :
;
: ;
rayTracingMat
 
.
 
	SetBuffer
 
(
  
AllMeshInfo
  +
,
+ ,

meshReader
- 7
)
7 8
;
8 9
}
 
private
 
struct
 
Sphere
 
{
 
public
   
Vector3
   
position
   
;
    
public
¡¡ 
float
¡¡ 
radius
¡¡ 
;
¡¡ 
public
¢¢  
RayTracingMaterial
¢¢ !
material
¢¢" *
;
¢¢* +
}
££ 
private
¥¥ 
struct
¥¥ 
Triangle
¥¥ 
{
¥¥ 
public
¦¦ 
Vector3
¦¦ 
posA
¦¦ 
,
¦¦ 
posB
¦¦ !
,
¦¦! "
posC
¦¦# '
;
¦¦' (
public
§§ 
Vector3
§§ 
normalA
§§ 
,
§§ 
normalB
§§  '
,
§§' (
normalC
§§) 0
;
§§0 1
}
¨¨ 
private
ªª 
struct
ªª 
MeshInfo
ªª 
{
ªª 
public
«« 
int
««  
firstTriangleIndex
«« %
;
««% &
public
¬¬ 
int
¬¬ 
numTriangles
¬¬ 
;
¬¬  
public
­­  
RayTracingMaterial
­­ !
material
­­" *
;
­­* +
}
®® 
}¯¯ 