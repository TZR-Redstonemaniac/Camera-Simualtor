±>
mC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\Tests\IntersectionTester.cs
public 
class 
IntersectionTester 
:  !
MonoBehaviour" /
{0 1
[ 
Header 
( 
$str 
) 
] 
[ 
SerializeField &
]& '
private( /
Vector20 7
pos8 ;
;; <
[ 
SerializeField 
] 
private 
float "
rad# &
;& '
[		 
Header		 
(		 
$str		 
)		 
]		 
[		 
SerializeField		 (
]		( )
private		* 1
Vector2		2 9
	positionA		: C
;		C D
[ 
SerializeField 
] 
private 
Vector2 $
	positionB% .
;. /
[ 
SerializeField 
] 
private 
Vector2 $
	positionC% .
;. /
[ 
Header 
( 
$str 
) 
] 
[ 
SerializeField &
]& '
private( /
Camera0 6
cam7 :
;: ;
[ 
SerializeField 
] 
private 
float "
rayLen# )
;) *
private 
void 
Update 
( 
) 
{ 
Vector3 
mousePos 
= 
cam 
. 
ScreenToWorldPoint 1
(1 2
new2 5
Vector36 =
(= >
Input> C
.C D
mousePositionD Q
.Q R
xR S
,S T
InputU Z
.Z [
mousePosition[ h
.h i
yi j
,j k
cam 
. 
	transform 
. 
position "
." #
z# $
*% &
-' (
$num( )
)) *
)* +
;+ ,
float 
dir 
= 
MovementHelper "
." #
GetAngleInDegrees# 4
(4 5
pos5 8
,8 9
mousePos: B
)B C
;C D
Vector2 
	vectorDir 
= 
new 
(  
Mathf  %
.% &
Sin& )
() *
dir* -
*. /
Mathf0 5
.5 6
Deg2Rad6 =
)= >
,> ?
Mathf@ E
.E F
CosF I
(I J
dirJ M
*N O
MathfP U
.U V
Deg2RadV ]
)] ^
)^ _
;_ `
Vector2 
endPos 
= 
pos 
+ 
	vectorDir (
*) *
rayLen+ 1
;1 2
using 
( 
Draw 
. 
Command 
( 
cam 
)  
)  !
{" #
Draw 
. 
LineGeometry 
= 
LineGeometry  ,
., -
Volumetric3D- 9
;9 :
Draw 
. 
ThicknessSpace 
=  !
ThicknessSpace" 0
.0 1
Pixels1 7
;7 8
Draw 
. 
	Thickness 
= 
$num 
; 
Draw 
. 
Line 
( 
pos 
, 
endPos !
,! "
Color# (
.( )
gray) -
,- .
Color/ 4
.4 5
gray5 9
)9 :
;: ;
Draw!! 
.!! 
Triangle!! 
(!! 
	positionA!! #
,!!# $
	positionB!!% .
,!!. /
	positionC!!0 9
,!!9 :
Color!!; @
.!!@ A
white!!A F
)!!F G
;!!G H
Draw"" 
."" 
Disc"" 
("" 
pos"" 
,"" 
rad"" 
,"" 

DiscColors""  *
.""* +
Flat""+ /
(""/ 0
Color""0 5
.""5 6
white""6 ;
)""; <
)""< =
;""= >
}## 	
DoesIntersect%% 
(%% 
	vectorDir%% 
)%%  
;%%  !
}&& 
private(( 
void(( 
DoesIntersect(( 
((( 
Vector2(( &
dir((' *
)((* +
{((, -
Vector3)) 
edgeAB)) 
=)) 
	positionB)) "
-))# $
	positionA))% .
;)). /
Vector3** 
edgeAC** 
=** 
	positionC** "
-**# $
	positionA**% .
;**. /
Vector3++ 
normalVector++ 
=++ 
Vector3++ &
.++& '
Cross++' ,
(++, -
edgeAB++- 3
,++3 4
edgeAC++5 ;
)++; <
;++< =
Vector3,, 
ao,, 
=,, 
pos,, 
-,, 
	positionA,, $
;,,$ %
Vector3-- 
dao-- 
=-- 
Vector3-- 
.-- 
Cross-- #
(--# $
ao--$ &
,--& '
dir--( +
)--+ ,
;--, -
float// 
determinant// 
=// 
-// 
Vector3// $
.//$ %
Dot//% (
(//( )
dir//) ,
,//, -
normalVector//. :
)//: ;
;//; <
float00 
invDet00 
=00 
$num00 
/00 
determinant00 &
;00& '
float22 
dst22 
=22 
Vector322 
.22 
Dot22 
(22  
ao22  "
,22" #
normalVector22$ 0
)220 1
*222 3
invDet224 :
;22: ;
float33 
u33 
=33 
Vector333 
.33 
Dot33 
(33 
edgeAC33 $
,33$ %
dao33& )
)33) *
*33+ ,
invDet33- 3
;333 4
float44 
v44 
=44 
-44 
Vector344 
.44 
Dot44 
(44 
edgeAB44 %
,44% &
dao44' *
)44* +
*44, -
invDet44. 4
;444 5
float55 
w55 
=55 
$num55 
-55 
u55 
-55 
v55 
;55 
Debug77 
.77 
Log77 
(77 
normalVector77 
+77  
$str77! %
+77& '
dir77( +
)77+ ,
;77, -
if99 

(99 
determinant99 
<99 
$num99 
||99 !
dst99" %
<99& '
$num99( )
||99* ,
u99- .
<99/ 0
$num991 2
||993 5
v996 7
<998 9
$num99: ;
||99< >
w99? @
<99A B
$num99C D
)99D E
return99F L
;99L M
Vector3;; 
p1;; 
=;; 
pos;; 
+;; 
dir;; 
*;;  
dst;;! $
;;;$ %
using== 
(== 
Draw== 
.== 
Command== 
(== 
cam== 
)==  
)==  !
Draw==" &
.==& '
Disc==' +
(==+ ,
p1==, .
,==. /
rad==0 3
,==3 4

DiscColors==5 ?
.==? @
Flat==@ D
(==D E
Color==E J
.==J K
red==K N
)==N O
)==O P
;==P Q
}>> 
}?? ø4
kC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\Objects\RayTracingMesh.cs
[ 
ExecuteAlways 
] 
public 
class 
RayTracingMesh 
: 
MonoBehaviour +
{, -
private 
static 
readonly 
int 

Glossiness  *
=+ ,
Shader- 3
.3 4
PropertyToID4 @
(@ A
$strA N
)N O
;O P
public 

RayTracingMaterial 
material &
;& '
public

 

readonly

 
List

 
<

 
Triangle

 !
>

! "
	triangles

# ,
=

- .
new

/ 2
(

2 3
)

3 4
;

4 5
private 
Material 
mat 
; 
private 
Mesh 
mesh 
; 
private 
void 
Start 
( 
) 
=> 
UpdateMeshData *
(* +
)+ ,
;, -
private 
void 
Update 
( 
) 
{ 
if 

( 
mat 
== 
null 
) 
mat 
= 
new "
Material# +
(+ ,
Shader, 2
.2 3
Find3 7
(7 8
$str8 B
)B C
)C D
;D E
mat 
. 
color 
= 
material 
. 
color "
;" #
mat 
. 
SetFloat 
( 

Glossiness 
,  
material! )
.) *

smoothness* 4
)4 5
;5 6
GetComponent 
< 
MeshRenderer !
>! "
(" #
)# $
.$ %
material% -
=. /
mat0 3
;3 4
} 
public 

void 
UpdateMeshData 
( 
)  
{! "
	triangles 
. 
Clear 
( 
) 
; 
mesh 
= 
GetComponent 
< 

MeshFilter &
>& '
(' (
)( )
.) *

sharedMesh* 4
;4 5
Vector3 
[ 
] 
vertices 
= 
mesh !
.! "
vertices" *
;* +
Vector3 
[ 
] 
normals 
= 
mesh  
.  !
normals! (
;( )
int 
[ 
] 
indices 
= 
mesh 
. 
	triangles &
;& '
Triangle!! 
triangle!! 
=!! 
new!! 
(!!  
)!!  !
;!!! "
for"" 
("" 
int"" 
i"" 
="" 
$num"" 
;"" 
i"" 
<"" 
indices"" #
.""# $
Length""$ *
;""* +
i"", -
+="". 0
$num""1 2
)""2 3
{""4 5
int## 
a## 
=## 
indices## 
[## 
i## 
]## 
;## 
int$$ 
b$$ 
=$$ 
indices$$ 
[$$ 
i$$ 
+$$ 
$num$$  !
]$$! "
;$$" #
int%% 
c%% 
=%% 
indices%% 
[%% 
i%% 
+%% 
$num%%  !
]%%! "
;%%" #
triangle'' 
.'' 
posA'' 
='' 
LocalToWorld'' (
(''( )
vertices'') 1
[''1 2
a''2 3
]''3 4
)''4 5
;''5 6
triangle(( 
.(( 
normalA(( 
=(( 
normals(( &
[((& '
a((' (
]((( )
;(() *
triangle** 
.** 
posB** 
=** 
LocalToWorld** (
(**( )
vertices**) 1
[**1 2
b**2 3
]**3 4
)**4 5
;**5 6
triangle++ 
.++ 
normalB++ 
=++ 
normals++ &
[++& '
b++' (
]++( )
;++) *
triangle-- 
.-- 
posC-- 
=-- 
LocalToWorld-- (
(--( )
vertices--) 1
[--1 2
c--2 3
]--3 4
)--4 5
;--5 6
triangle.. 
... 
normalC.. 
=.. 
normals.. &
[..& '
c..' (
]..( )
;..) *
	triangles// 
.// 
Add// 
(// 
triangle// "
)//" #
;//# $
triangle00 
=00 
new00 
Triangle00 #
(00# $
)00$ %
;00% &
}11 	
}22 
private44 
Vector344 
LocalToWorld44  
(44  !
Vector344! (
vertex44) /
)44/ 0
{441 2
Vector355 
objectPosition55 
=55  
	transform55! *
.55* +
position55+ 3
;553 4

Quaternion66 
objectRotation66 !
=66" #
	transform66$ -
.66- .
rotation66. 6
;666 7
Vector377 
objectScale77 
=77 
	transform77 '
.77' (

lossyScale77( 2
;772 3
Vector3:: 
scaledVertex:: 
=:: 
Vector3:: &
.::& '
Scale::' ,
(::, -
vertex::- 3
,::3 4
objectScale::5 @
)::@ A
;::A B
Vector3== 
rotatedVertex== 
=== 
objectRotation==  .
*==/ 0
scaledVertex==1 =
;=== >
Vector3@@ 
worldVertex@@ 
=@@ 
objectPosition@@ ,
+@@- .
rotatedVertex@@/ <
;@@< =
returnBB 
worldVertexBB 
;BB 
}CC 
publicEE 

structEE 
TriangleEE 
{EE 
publicFF 
Vector3FF 
posAFF 
,FF 
posBFF !
,FF! "
posCFF# '
;FF' (
publicGG 
Vector3GG 
normalAGG 
,GG 
normalBGG  '
,GG' (
normalCGG) 0
;GG0 1
}HH 
}II ¶
fC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\RayTracingManager.cs
[ 
ExecuteAlways 
] 
[		 )
ImageEffectAllowedInSceneView		 
]		 
public

 
class

 
RayTracingManager

 
:

  
MonoBehaviour

! .
{

/ 0
private 
static 
readonly 
int 
Spheres  '
=( )
Shader* 0
.0 1
PropertyToID1 =
(= >
$str> G
)G H
;H I
private 
static 
readonly 
int 
	Triangles  )
=* +
Shader, 2
.2 3
PropertyToID3 ?
(? @
$str@ K
)K L
;L M
private 
static 
readonly 
int 
AllMeshInfo  +
=, -
Shader. 4
.4 5
PropertyToID5 A
(A B
$strB O
)O P
;P Q
private 
static 
readonly 
int 
NumOfSpheres  ,
=- .
Shader/ 5
.5 6
PropertyToID6 B
(B C
$strC Q
)Q R
;R S
private 
static 
readonly 
int 
BounceCount  +
=, -
Shader. 4
.4 5
PropertyToID5 A
(A B
$strB R
)R S
;S T
private 
static 
readonly 
int 
RaysPerPixel  ,
=- .
Shader/ 5
.5 6
PropertyToID6 B
(B C
$strC T
)T U
;U V
private 
static 
readonly 
int 
RenderedFrames  .
=/ 0
Shader1 7
.7 8
PropertyToID8 D
(D E
$strE X
)X Y
;Y Z
private 
static 
readonly 
int 
	Intensity  )
=* +
Shader, 2
.2 3
PropertyToID3 ?
(? @
$str@ N
)N O
;O P
private 
static 
readonly 
int 
Focus  %
=& '
Shader( .
.. /
PropertyToID/ ;
(; <
$str< F
)F G
;G H
private 
static 
readonly 
int 
ColorHorizon  ,
=- .
Shader/ 5
.5 6
PropertyToID6 B
(B C
$strC T
)T U
;U V
private 
static 
readonly 
int 
ColorZenith  +
=, -
Shader. 4
.4 5
PropertyToID5 A
(A B
$strB R
)R S
;S T
private 
static 
readonly 
int 
GroundColor1  ,
=- .
Shader/ 5
.5 6
PropertyToID6 B
(B C
$strC P
)P Q
;Q R
private 
static 
readonly 
int 

ViewParams  *
=+ ,
Shader- 3
.3 4
PropertyToID4 @
(@ A
$strA M
)M N
;N O
private 
static 
readonly 
int !
CamLocalToWorldMatrix  5
=6 7
Shader8 >
.> ?
PropertyToID? K
(K L
$strL c
)c d
;d e
private 
static 
readonly 
int 
Frames  &
=' (
Shader) /
./ 0
PropertyToID0 <
(< =
$str= Q
)Q R
;R S
private 
static 
readonly 
int 
	PrevFrame  )
=* +
Shader, 2
.2 3
PropertyToID3 ?
(? @
$str@ L
)L M
;M N
private 
static 
readonly 
int 
	NumMeshes  )
=* +
Shader, 2
.2 3
PropertyToID3 ?
(? @
$str@ K
)K L
;L M
private 
static 
readonly 
int 
UseEnvironment  .
=/ 0
Shader1 7
.7 8
PropertyToID8 D
(D E
$strE U
)U V
;V W
private 
static 
readonly 
int 
Strength  (
=) *
Shader+ 1
.1 2
PropertyToID2 >
(> ?
$str? P
)P Q
;Q R
private 
static 
readonly 
int 
DefocusStrength1  0
=1 2
Shader3 9
.9 :
PropertyToID: F
(F G
$strG X
)X Y
;Y Z
[!! 
Header!! 
(!! 
$str!! 
)!! 
]!! 
["" 
SerializeField"" 
]"" 
private"" 
Shader"" #
rayTracingShader""$ 4
;""4 5
[$$ 
SerializeField$$ 
]$$ 
private$$ 
Shader$$ #
companionShader$$$ 3
;$$3 4
[%% 
SerializeField%% 
]%% 
private%% 
Camera%% #
mainCam%%$ +
;%%+ ,
['' 
Header'' 
('' 
$str'' 
)'' 
]'' 
[(( 
SerializeField(( 
](( 
private(( 
bool(( ! 
useShaderInSceneView((" 6
;((6 7
[** 
SerializeField** 
]** 
[** 
Range** 
(** 
$num** 
,** 
$num** !
)**! "
]**" #
private**$ +
int**, /
MaxBounceCount**0 >
;**> ?
[++ 
SerializeField++ 
]++ 
[++ 
Range++ 
(++ 
$num++ 
,++ 
$num++ !
)++! "
]++" #
private++$ +
int++, /
NumRaysPerPixel++0 ?
;++? @
[,, 
SerializeField,, 
],, 
[,, 
Min,, 
(,, 
$num,, 
),, 
],, 
private,, %
float,,& +
DivergeStrength,,, ;
;,,; <
[-- 
SerializeField-- 
]-- 
[-- 
Min-- 
(-- 
$num-- 
)-- 
]-- 
private-- %
float--& +
DefocusStrength--, ;
;--; <
[.. 
SerializeField.. 
].. 
[.. 
Min.. 
(.. 
$num.. 
).. 
]..  
private..! (
float..) .
FocusDistance../ <
;..< =
[// 
SerializeField// 
]// 
[// 
Min// 
(// 
$num// 
)// 
]//  
private//! (
float//) .
RenderDistance/// =
;//= >
[11 
Header11 
(11 
$str11 
)11 
]11 
[22 
SerializeField22 
]22 
private22 
bool22 !
environment22" -
;22- .
[44 
SerializeField44 
]44 
private44 
bool44 !
visualizeFocus44" 0
;440 1
[66 
SerializeField66 
]66 
private66 
Color66 "
SkyColorHorizon66# 2
;662 3
[77 
SerializeField77 
]77 
private77 
Color77 "
SkyColorZenith77# 1
;771 2
[88 
SerializeField88 
]88 
private88 
Color88 "
GroundColor88# .
;88. /
[99 
SerializeField99 
]99 
private99 
float99 "
SunFocus99# +
;99+ ,
[:: 
SerializeField:: 
]:: 
private:: 
float:: "
SunIntensity::# /
;::/ 0
private<< 
Material<< 
companionMat<< !
;<<! "
private>> 
RenderTexture>> 
currentTexture>> (
;>>( )
private@@ 
bool@@ 
init@@ 
;@@ 
privateAA 
RayTracingMeshAA 
[AA 
]AA 
meshesAA #
;AA# $
privateBB 
ComputeBufferBB 

meshReaderBB $
;BB$ %
privateDD 
intDD 
NumRenderedFramesDD !
;DD! "
privateFF 
MaterialFF 
rayTracingMatFF "
;FF" #
privateHH 
ComputeBufferHH 
sphereReaderHH &
;HH& '
privateJJ 
SphereObjectJJ 
[JJ 
]JJ 
spheresJJ "
;JJ" #
privateKK 
ComputeBufferKK 
triangleReaderKK (
;KK( )
privateLL 
staticLL 
readonlyLL 
intLL 
DistanceLL  (
=LL) *
ShaderLL+ 1
.LL1 2
PropertyToIDLL2 >
(LL> ?
$strLL? O
)LLO P
;LLP Q
privateNN 
voidNN 
StartNN 
(NN 
)NN 
=>NN 
InitShadersNN '
(NN' (
)NN( )
;NN) *
privatePP 
voidPP 
	OnDestroyPP 
(PP 
)PP 
{PP 

meshReaderQQ 
?QQ 
.QQ 
ReleaseQQ 
(QQ 
)QQ 
;QQ 
sphereReaderRR 
?RR 
.RR 
ReleaseRR 
(RR 
)RR 
;RR  
triangleReaderSS 
?SS 
.SS 
ReleaseSS 
(SS  
)SS  !
;SS! "

meshReaderTT 
?TT 
.TT 
DisposeTT 
(TT 
)TT 
;TT 
sphereReaderUU 
?UU 
.UU 
DisposeUU 
(UU 
)UU 
;UU  
triangleReaderVV 
?VV 
.VV 
DisposeVV 
(VV  
)VV  !
;VV! "
}WW 
privateYY 
voidYY 
OnRenderImageYY 
(YY 
RenderTextureYY ,
srcYY- 0
,YY0 1
RenderTextureYY2 ?
targetYY@ F
)YYF G
{YYH I
ifZZ 

(ZZ 
!ZZ 
initZZ 
)ZZ 
InitZZ 
(ZZ 
srcZZ 
)ZZ 
;ZZ 
if\\ 

(\\ 
visualizeFocus\\ 
)\\ 
{\\ 
Camera]] 
cam]] 
=]]  
useShaderInSceneView]] -
?]]. /
Camera]]0 6
.]]6 7
current]]7 >
:]]? @
mainCam]]A H
;]]H I
float__ 
frustumHeight__ 
=__  !
$num__" &
*__' (
Mathf__) .
.__. /
Tan__/ 2
(__2 3
cam__3 6
.__6 7
fieldOfView__7 B
*__C D
$num__E I
*__J K
Mathf__L Q
.__Q R
Deg2Rad__R Y
)__Y Z
*__[ \
FocusDistance__] j
;__j k
float`` 
frustumWidth`` 
=``  
frustumHeight``! .
*``/ 0
cam``1 4
.``4 5
aspect``5 ;
;``; <
Vector3bb 
topLeftFrustumLinebb &
=bb' (
cambb) ,
.bb, -
	transformbb- 6
.bb6 7
positionbb7 ?
+bb@ A
cambbB E
.bbE F
	transformbbF O
.bbO P
rightbbP U
*bbV W
(bbX Y
-bbY Z
frustumWidthbbZ f
*bbg h
$numbbi m
)bbm n
+bbo p
camcc 
.cc 
	transformcc 
.cc 
upcc  
*cc! "
(cc# $
frustumHeightcc$ 1
*cc2 3
$numcc4 8
)cc8 9
+cc: ;
camcc< ?
.cc? @
	transformcc@ I
.ccI J
forwardccJ Q
*ccR S
FocusDistanceccT a
;cca b
Vector3ee 
topRightFrustumLineee '
=ee( )
camee* -
.ee- .
	transformee. 7
.ee7 8
positionee8 @
+eeA B
cameeC F
.eeF G
	transformeeG P
.eeP Q
righteeQ V
*eeW X
(eeY Z
frustumWidtheeZ f
*eeg h
$numeei m
)eem n
+eeo p
camff 
.ff 
	transformff 
.ff 
upff  
*ff! "
(ff# $
frustumHeightff$ 1
*ff2 3
$numff4 8
)ff8 9
+ff: ;
camff< ?
.ff? @
	transformff@ I
.ffI J
forwardffJ Q
*ffR S
FocusDistanceffT a
;ffa b
Vector3hh "
bottomRightFrustumLinehh *
=hh+ ,
camhh- 0
.hh0 1
	transformhh1 :
.hh: ;
positionhh; C
+hhD E
camhhF I
.hhI J
	transformhhJ S
.hhS T
righthhT Y
*hhZ [
(hh\ ]
frustumWidthhh] i
*hhj k
$numhhl p
)hhp q
-hhr s
camii 
.ii 
	transformii 
.ii 
upii  
*ii! "
(ii# $
frustumHeightii$ 1
*ii2 3
$numii4 8
)ii8 9
+ii: ;
camii< ?
.ii? @
	transformii@ I
.iiI J
forwardiiJ Q
*iiR S
FocusDistanceiiT a
;iia b
Vector3kk !
bottomLeftFrustumLinekk )
=kk* +
camkk, /
.kk/ 0
	transformkk0 9
.kk9 :
positionkk: B
+kkC D
camkkE H
.kkH I
	transformkkI R
.kkR S
rightkkS X
*kkY Z
(kk[ \
-kk\ ]
frustumWidthkk] i
*kkj k
$numkkl p
)kkp q
-kkr s
camll 
.ll 
	transformll 
.ll 
upll  
*ll! "
(ll# $
frustumHeightll$ 1
*ll2 3
$numll4 8
)ll8 9
+ll: ;
camll< ?
.ll? @
	transformll@ I
.llI J
forwardllJ Q
*llR S
FocusDistancellT a
;lla b
ifnn 
(nn 
Camerann 
.nn 
currentnn 
.nn 
namenn #
==nn$ &
$strnn' 4
)nn4 5
{nn6 7
usingoo 
(oo 
Drawoo 
.oo 
Commandoo #
(oo# $
Cameraoo$ *
.oo* +
currentoo+ 2
)oo2 3
)oo3 4
{oo5 6
Colorpp 
colorpp 
=pp  !
Colorpp" '
.pp' (
greenpp( -
;pp- .
colorqq 
.qq 
aqq 
=qq 
$numqq #
;qq# $
Drawrr 
.rr 
Quadrr 
(rr 
topRightFrustumLinerr 1
,rr1 2
topLeftFrustumLinerr3 E
,rrE F!
bottomLeftFrustumLinerrG \
,rr\ ]"
bottomRightFrustumLinerr^ t
,rrt u
colorrrv {
)rr{ |
;rr| }
}ss 
}tt 
}uu 	
ifww 

(ww  
useShaderInSceneViewww  
&&ww! #
!ww$ %
Applicationww% 0
.ww0 1
	isPlayingww1 :
)ww: ;
{ww< =
InitShadersxx 
(xx 
)xx 
;xx 
UpdateCameraParamszz 
(zz 
Camerazz %
.zz% &
currentzz& -
)zz- .
;zz. / 
UpdateMaterialParams{{  
({{  !
){{! "
;{{" #
Graphics}} 
.}} 
Blit}} 
(}} 
null}} 
,}} 
target}}  &
,}}& '
rayTracingMat}}( 5
)}}5 6
;}}6 7
}~~ 	
else~~
 
if~~ 
(~~ 
Camera~~ 
.~~ 
current~~ !
.~~! "
name~~" &
!=~~' )
$str~~* 7
)~~7 8
{~~9 :
InitShaders 
( 
) 
;  
UpdateCameraParams
 
(
 
Camera
 %
.
% &
current
& -
)
- .
;
. /"
UpdateMaterialParams
  
(
  !
)
! "
;
" #
RenderTexture
 
prevFrameCopy
 '
=
( )
RenderTexture
* 7
.
7 8
GetTemporary
8 D
(
D E
src
E H
.
H I
width
I N
,
N O
src
P S
.
S T
height
T Z
,
Z [
$num
\ ]
,
] ^
GraphicsFormat
_ m
.
m n"
R32G32B32A32_SFloatn 
) 
; 
Graphics
 
.
 
Blit
 
(
 
currentTexture
 (
,
( )
prevFrameCopy
* 7
)
7 8
;
8 9
NumRenderedFrames
 
+=
  
Application
! ,
.
, -
	isPlaying
- 6
?
7 8
$num
9 :
:
; <
$num
= >
;
> ?"
UpdateMaterialParams
  
(
  !
)
! "
;
" #
RenderTexture
 
currentFrame
 &
=
' (
RenderTexture
) 6
.
6 7
GetTemporary
7 C
(
C D
src
D G
.
G H
width
H M
,
M N
src
O R
.
R S
height
S Y
,
Y Z
$num
[ \
,
\ ]
GraphicsFormat
^ l
.
l m"
R32G32B32A32_SFloatm 
) 
; 
Graphics
 
.
 
Blit
 
(
 
null
 
,
 
currentFrame
  ,
,
, -
rayTracingMat
. ;
)
; <
;
< =
companionMat
 
.
 
SetInt
 
(
  
Frames
  &
,
& '
NumRenderedFrames
( 9
)
9 :
;
: ;
companionMat
 
.
 

SetTexture
 #
(
# $
	PrevFrame
$ -
,
- .
prevFrameCopy
/ <
)
< =
;
= >
Graphics
 
.
 
Blit
 
(
 
currentFrame
 &
,
& '
currentTexture
( 6
,
6 7
companionMat
8 D
)
D E
;
E F
Graphics
 
.
 
Blit
 
(
 
currentTexture
 (
,
( )
target
* 0
)
0 1
;
1 2
RenderTexture
 
.
 
ReleaseTemporary
 *
(
* +
currentFrame
+ 7
)
7 8
;
8 9
RenderTexture
 
.
 
ReleaseTemporary
 *
(
* +
prevFrameCopy
+ 8
)
8 9
;
9 :
RenderTexture
 
.
 
ReleaseTemporary
 *
(
* +
currentFrame
+ 7
)
7 8
;
8 9
}
 	
else

 
Graphics
 
.
 
Blit
 
(
 
src
  
,
  !
target
" (
)
( )
;
) *
}
 
private
 
void
 
InitShaders
 
(
 
)
 
{
  
rayTracingMat
 
=
 
new
 
Material
 $
(
$ %
rayTracingShader
% 5
)
5 6
;
6 7
companionMat
 
=
 
new
 
Material
 #
(
# $
companionShader
$ 3
)
3 4
;
4 5

meshReader
 
?
 
.
 
Release
 
(
 
)
 
;
 
sphereReader
 
?
 
.
 
Release
 
(
 
)
 
;
  
triangleReader
 
?
 
.
 
Release
 
(
  
)
  !
;
! "

meshReader
 
?
 
.
 
Dispose
 
(
 
)
 
;
 
sphereReader
   
?
   
.
   
Dispose
   
(
   
)
   
;
    
triangleReader
¡¡ 
?
¡¡ 
.
¡¡ 
Dispose
¡¡ 
(
¡¡  
)
¡¡  !
;
¡¡! "
meshes
££ 
=
££ 
FindObjectsOfType
££ "
<
££" #
RayTracingMesh
££# 1
>
££1 2
(
££2 3
)
££3 4
;
££4 5
foreach
¤¤ 
(
¤¤ 
RayTracingMesh
¤¤ 
mesh
¤¤  $
in
¤¤% '
meshes
¤¤( .
)
¤¤. /
mesh
¤¤0 4
.
¤¤4 5
UpdateMeshData
¤¤5 C
(
¤¤C D
)
¤¤D E
;
¤¤E F
int
¥¥ 
size
¥¥ 
=
¥¥ 
meshes
¥¥ 
.
¥¥ 
Sum
¥¥ 
(
¥¥ 
mesh
¥¥ "
=>
¥¥# %
mesh
¥¥& *
.
¥¥* +
	triangles
¥¥+ 4
.
¥¥4 5
Count
¥¥5 :
)
¥¥: ;
;
¥¥; <
if
§§ 

(
§§ 
size
§§ 
>
§§ 
$num
§§ 
)
§§ 
{
§§ 
const
¨¨ 
int
¨¨ 
triangleSize
¨¨ "
=
¨¨# $
sizeof
¨¨% +
(
¨¨+ ,
float
¨¨, 1
)
¨¨1 2
*
¨¨3 4
$num
¨¨5 7
;
¨¨7 8
const
©© 
int
©© 
meshSize
©© 
=
©©  
sizeof
©©! '
(
©©' (
float
©©( -
)
©©- .
*
©©/ 0
$num
©©1 3
+
©©4 5
sizeof
©©6 <
(
©©< =
int
©©= @
)
©©@ A
*
©©B C
$num
©©D E
;
©©E F
triangleReader
ªª 
=
ªª 
new
ªª  
ComputeBuffer
ªª! .
(
ªª. /
size
ªª/ 3
,
ªª3 4
triangleSize
ªª5 A
)
ªªA B
;
ªªB C

meshReader
«« 
=
«« 
new
«« 
ComputeBuffer
«« *
(
««* +
meshes
««+ 1
.
««1 2
Length
««2 8
,
««8 9
meshSize
««: B
)
««B C
;
««C D
}
¬¬ 	
spheres
®® 
=
®® 
FindObjectsOfType
®® #
<
®®# $
SphereObject
®®$ 0
>
®®0 1
(
®®1 2
)
®®2 3
;
®®3 4
if
°° 

(
°° 
spheres
°° 
.
°° 
Length
°° 
>
°° 
$num
°° 
)
°° 
{
°°  !
const
±± 
int
±± 

sphereSize
±±  
=
±±! "
sizeof
±±# )
(
±±) *
float
±±* /
)
±±/ 0
*
±±1 2
$num
±±3 5
;
±±5 6
sphereReader
²² 
=
²² 
new
²² 
ComputeBuffer
²² ,
(
²², -
spheres
²²- 4
.
²²4 5
Length
²²5 ;
,
²²; <

sphereSize
²²= G
)
²²G H
;
²²H I
}
³³ 	
}
´´ 
private
¶¶ 
void
¶¶ 
Init
¶¶ 
(
¶¶ 
RenderTexture
¶¶ #
src
¶¶$ '
)
¶¶' (
{
¶¶) *
int
·· 
width
·· 
=
·· 
src
·· 
.
·· 
width
·· 
;
·· 
int
¸¸ 
height
¸¸ 
=
¸¸ 
src
¸¸ 
.
¸¸ 
height
¸¸ 
;
¸¸  
int
¹¹ 
	depthMode
¹¹ 
=
¹¹ 
src
¹¹ 
.
¹¹ 
depth
¹¹ !
;
¹¹! "
GraphicsFormat
»» 
format
»» 
=
»» 
src
»»  #
.
»»# $
graphicsFormat
»»$ 2
;
»»2 3
bool
½½ 

useMipMaps
½½ 
=
½½ 
src
½½ 
.
½½ 
	useMipMap
½½ '
;
½½' (
currentTexture
¿¿ 
=
¿¿ 
new
¿¿ 
RenderTexture
¿¿ *
(
¿¿* +
width
¿¿+ 0
,
¿¿0 1
height
¿¿2 8
,
¿¿8 9
	depthMode
¿¿: C
)
¿¿C D
{
¿¿E F
graphicsFormat
ÀÀ 
=
ÀÀ 
format
ÀÀ #
,
ÀÀ# $
enableRandomWrite
ÀÀ% 6
=
ÀÀ7 8
true
ÀÀ9 =
,
ÀÀ= >
autoGenerateMips
ÀÀ? O
=
ÀÀP Q
false
ÀÀR W
,
ÀÀW X
	useMipMap
ÀÀY b
=
ÀÀc d

useMipMaps
ÀÀe o
}
ÁÁ 	
;
ÁÁ	 

currentTexture
ÃÃ 
.
ÃÃ 
Create
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ  
init
ÅÅ 
=
ÅÅ 
true
ÅÅ 
;
ÅÅ 
}
ÆÆ 
private
ÈÈ 
void
ÈÈ  
UpdateCameraParams
ÈÈ #
(
ÈÈ# $
Camera
ÈÈ$ *
cam
ÈÈ+ .
)
ÈÈ. /
{
ÈÈ0 1
rayTracingMat
ÉÉ 
=
ÉÉ 
new
ÉÉ 
Material
ÉÉ $
(
ÉÉ$ %
rayTracingShader
ÉÉ% 5
)
ÉÉ5 6
;
ÉÉ6 7
companionMat
ÊÊ 
=
ÊÊ 
new
ÊÊ 
Material
ÊÊ #
(
ÊÊ# $
companionShader
ÊÊ$ 3
)
ÊÊ3 4
;
ÊÊ4 5
float
ÌÌ 
planeHeight
ÌÌ 
=
ÌÌ 
FocusDistance
ÌÌ )
*
ÌÌ* +
Mathf
ÌÌ, 1
.
ÌÌ1 2
Tan
ÌÌ2 5
(
ÌÌ5 6
cam
ÌÌ6 9
.
ÌÌ9 :
fieldOfView
ÌÌ: E
*
ÌÌF G
$num
ÌÌH L
*
ÌÌM N
Mathf
ÌÌO T
.
ÌÌT U
Deg2Rad
ÌÌU \
)
ÌÌ\ ]
*
ÌÌ^ _
$num
ÌÌ` a
;
ÌÌa b
float
ÍÍ 

planeWidth
ÍÍ 
=
ÍÍ 
planeHeight
ÍÍ &
*
ÍÍ' (
cam
ÍÍ) ,
.
ÍÍ, -
aspect
ÍÍ- 3
;
ÍÍ3 4
rayTracingMat
ÏÏ 
.
ÏÏ 
	SetVector
ÏÏ 
(
ÏÏ  

ViewParams
ÏÏ  *
,
ÏÏ* +
new
ÏÏ, /
Vector3
ÏÏ0 7
(
ÏÏ7 8

planeWidth
ÏÏ8 B
,
ÏÏB C
planeHeight
ÏÏD O
,
ÏÏO P
FocusDistance
ÏÏQ ^
)
ÏÏ^ _
)
ÏÏ_ `
;
ÏÏ` a
rayTracingMat
ÐÐ 
.
ÐÐ 
	SetMatrix
ÐÐ 
(
ÐÐ  #
CamLocalToWorldMatrix
ÐÐ  5
,
ÐÐ5 6
cam
ÐÐ7 :
.
ÐÐ: ;
	transform
ÐÐ; D
.
ÐÐD E 
localToWorldMatrix
ÐÐE W
)
ÐÐW X
;
ÐÐX Y
}
ÑÑ 
private
ÓÓ 
void
ÓÓ "
UpdateMaterialParams
ÓÓ %
(
ÓÓ% &
)
ÓÓ& '
{
ÓÓ( )
HandleSpheres
ÔÔ 
(
ÔÔ 
)
ÔÔ 
;
ÔÔ 
HandleMeshes
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
rayTracingMat
×× 
.
×× 
SetInt
×× 
(
×× 
BounceCount
×× (
,
××( )
MaxBounceCount
××* 8
)
××8 9
;
××9 :
rayTracingMat
ØØ 
.
ØØ 
SetInt
ØØ 
(
ØØ 
RaysPerPixel
ØØ )
,
ØØ) *
NumRaysPerPixel
ØØ+ :
)
ØØ: ;
;
ØØ; <
rayTracingMat
ÙÙ 
.
ÙÙ 
SetInt
ÙÙ 
(
ÙÙ 
RenderedFrames
ÙÙ +
,
ÙÙ+ ,
NumRenderedFrames
ÙÙ- >
)
ÙÙ> ?
;
ÙÙ? @
rayTracingMat
ÛÛ 
.
ÛÛ 
SetFloat
ÛÛ 
(
ÛÛ 
	Intensity
ÛÛ (
,
ÛÛ( )
SunIntensity
ÛÛ* 6
)
ÛÛ6 7
;
ÛÛ7 8
rayTracingMat
ÜÜ 
.
ÜÜ 
SetFloat
ÜÜ 
(
ÜÜ 
Focus
ÜÜ $
,
ÜÜ$ %
SunFocus
ÜÜ& .
)
ÜÜ. /
;
ÜÜ/ 0
rayTracingMat
ÞÞ 
.
ÞÞ 
SetFloat
ÞÞ 
(
ÞÞ 
Strength
ÞÞ '
,
ÞÞ' (
DivergeStrength
ÞÞ) 8
)
ÞÞ8 9
;
ÞÞ9 :
rayTracingMat
ßß 
.
ßß 
SetFloat
ßß 
(
ßß 
DefocusStrength1
ßß /
,
ßß/ 0
DefocusStrength
ßß1 @
)
ßß@ A
;
ßßA B
rayTracingMat
àà 
.
àà 
SetFloat
àà 
(
àà 
Distance
àà '
,
àà' (
RenderDistance
àà) 7
)
àà7 8
;
àà8 9
rayTracingMat
ââ 
.
ââ 
SetColor
ââ 
(
ââ 
ColorHorizon
ââ +
,
ââ+ ,
SkyColorHorizon
ââ- <
)
ââ< =
;
ââ= >
rayTracingMat
ãã 
.
ãã 
SetColor
ãã 
(
ãã 
ColorZenith
ãã *
,
ãã* +
SkyColorZenith
ãã, :
)
ãã: ;
;
ãã; <
rayTracingMat
ää 
.
ää 
SetColor
ää 
(
ää 
GroundColor1
ää +
,
ää+ ,
GroundColor
ää- 8
)
ää8 9
;
ää9 :
rayTracingMat
åå 
.
åå 
SetInt
åå 
(
åå 
UseEnvironment
åå +
,
åå+ ,
environment
åå- 8
?
åå9 :
$num
åå; <
:
åå= >
$num
åå? @
)
åå@ A
;
ååA B
}
ææ 
private
èè 
void
èè 
HandleSpheres
èè 
(
èè 
)
èè  
{
èè! "
Sphere
éé 
[
éé 
]
éé 
sphereArray
éé 
=
éé 
new
éé "
Sphere
éé# )
[
éé) *
spheres
éé* 1
.
éé1 2
Length
éé2 8
]
éé8 9
;
éé9 :
if
ëë 

(
ëë 
spheres
ëë 
.
ëë 
Length
ëë 
==
ëë 
$num
ëë 
)
ëë  
return
ëë! '
;
ëë' (
for
íí 
(
íí 
int
íí 
i
íí 
=
íí 
$num
íí 
;
íí 
i
íí 
<
íí 
spheres
íí #
.
íí# $
Length
íí$ *
;
íí* +
i
íí, -
++
íí- /
)
íí/ 0
{
íí1 2
sphereArray
îî 
[
îî 
i
îî 
]
îî 
=
îî 
new
îî  
Sphere
îî! '
{
îî( )
position
ïï 
=
ïï 
spheres
ïï "
[
ïï" #
i
ïï# $
]
ïï$ %
.
ïï% &

gameObject
ïï& 0
.
ïï0 1
	transform
ïï1 :
.
ïï: ;
position
ïï; C
,
ïïC D
radius
ïïE K
=
ïïL M
spheres
ïïN U
[
ïïU V
i
ïïV W
]
ïïW X
.
ïïX Y

gameObject
ïïY c
.
ïïc d
	transform
ïïd m
.
ïïm n

localScale
ïïn x
.
ïïx y
x
ïïy z
/
ïï{ |
$num
ïï} ~
,
ïï~ 
material
ðð 
=
ðð 
spheres
ðð "
[
ðð" #
i
ðð# $
]
ðð$ %
.
ðð% &
material
ðð& .
}
ññ 
;
ññ 
}
òò 	
sphereReader
ôô 
.
ôô 
SetData
ôô 
(
ôô 
sphereArray
ôô (
)
ôô( )
;
ôô) *
rayTracingMat
õõ 
.
õõ 
SetInt
õõ 
(
õõ 
NumOfSpheres
õõ )
,
õõ) *
sphereArray
õõ+ 6
.
õõ6 7
Length
õõ7 =
)
õõ= >
;
õõ> ?
rayTracingMat
öö 
.
öö 
	SetBuffer
öö 
(
öö  
Spheres
öö  '
,
öö' (
sphereReader
öö) 5
)
öö5 6
;
öö6 7
}
÷÷ 
private
ùù 
void
ùù 
HandleMeshes
ùù 
(
ùù 
)
ùù 
{
ùù  !
foreach
úú 
(
úú 
RayTracingMesh
úú 
mesh
úú  $
in
úú% '
meshes
úú( .
)
úú. /
mesh
úú0 4
.
úú4 5
UpdateMeshData
úú5 C
(
úúC D
)
úúD E
;
úúE F
int
üü 
size
üü 
=
üü 
meshes
üü 
.
üü 
Sum
üü 
(
üü 
mesh
üü "
=>
üü# %
mesh
üü& *
.
üü* +
	triangles
üü+ 4
.
üü4 5
Count
üü5 :
)
üü: ;
;
üü; <
if
þþ 

(
þþ 
size
þþ 
==
þþ 
$num
þþ 
)
þþ 
return
þþ 
;
þþ 
Triangle
 
[
 
]
 
triangleArray
  
=
! "
new
# &
Triangle
' /
[
/ 0
size
0 4
]
4 5
;
5 6
MeshInfo
 
[
 
]
 
	meshInfos
 
=
 
new
 "
MeshInfo
# +
[
+ ,
meshes
, 2
.
2 3
Length
3 9
]
9 :
;
: ;
int
 
triangleIndex
 
=
 
$num
 
;
 
for
 
(
 
int
 
i
 
=
 
$num
 
;
 
i
 
<
 
meshes
 "
.
" #
Length
# )
;
) *
i
+ ,
++
, .
)
. /
{
0 1
	meshInfos
 
[
 
i
 
]
 
.
 
numTriangles
 %
=
& '
meshes
( .
[
. /
i
/ 0
]
0 1
.
1 2
	triangles
2 ;
.
; <
Count
< A
;
A B
	meshInfos
 
[
 
i
 
]
 
.
 
material
 !
=
" #
meshes
$ *
[
* +
i
+ ,
]
, -
.
- .
material
. 6
;
6 7
	meshInfos
 
[
 
i
 
]
 
.
  
firstTriangleIndex
 +
=
, -
triangleIndex
. ;
;
; <
for
 
(
 
int
 
j
 
=
 
$num
 
;
 
j
 
<
 
meshes
  &
[
& '
i
' (
]
( )
.
) *
	triangles
* 3
.
3 4
Count
4 9
;
9 :
j
; <
++
< >
)
> ?
{
@ A
triangleArray
 
[
 
triangleIndex
 +
]
+ ,
=
- .
new
/ 2
Triangle
3 ;
{
< =
posA
 
=
 
meshes
 !
[
! "
i
" #
]
# $
.
$ %
	triangles
% .
[
. /
j
/ 0
]
0 1
.
1 2
posA
2 6
,
6 7
posB
8 <
=
= >
meshes
? E
[
E F
i
F G
]
G H
.
H I
	triangles
I R
[
R S
j
S T
]
T U
.
U V
posB
V Z
,
Z [
posC
\ `
=
a b
meshes
c i
[
i j
i
j k
]
k l
.
l m
	triangles
m v
[
v w
j
w x
]
x y
.
y z
posC
z ~
,
~ 
normalA
 
=
 
meshes
 $
[
$ %
i
% &
]
& '
.
' (
	triangles
( 1
[
1 2
j
2 3
]
3 4
.
4 5
normalA
5 <
,
< =
normalB
> E
=
F G
meshes
H N
[
N O
i
O P
]
P Q
.
Q R
	triangles
R [
[
[ \
j
\ ]
]
] ^
.
^ _
normalB
_ f
,
f g
normalC
 
=
 
meshes
 $
[
$ %
i
% &
]
& '
.
' (
	triangles
( 1
[
1 2
j
2 3
]
3 4
.
4 5
normalC
5 <
}
 
;
 
triangleIndex
 
++
 
;
  
}
 
}
 	
triangleReader
 
.
 
SetData
 
(
 
triangleArray
 ,
)
, -
;
- .

meshReader
 
.
 
SetData
 
(
 
	meshInfos
 $
)
$ %
;
% &
rayTracingMat
 
.
 
SetInt
 
(
 
	NumMeshes
 &
,
& '
	meshInfos
( 1
.
1 2
Length
2 8
)
8 9
;
9 :
rayTracingMat
 
.
 
	SetBuffer
 
(
  
	Triangles
  )
,
) *
triangleReader
+ 9
)
9 :
;
: ;
rayTracingMat
 
.
 
	SetBuffer
 
(
  
AllMeshInfo
  +
,
+ ,

meshReader
- 7
)
7 8
;
8 9
}
 
private
 
struct
 
Sphere
 
{
 
public
 
Vector3
 
position
 
;
  
public
 
float
 
radius
 
;
 
public
  
RayTracingMaterial
 !
material
" *
;
* +
}
   
private
¢¢ 
struct
¢¢ 
Triangle
¢¢ 
{
¢¢ 
public
££ 
Vector3
££ 
posA
££ 
,
££ 
posB
££ !
,
££! "
posC
££# '
;
££' (
public
¤¤ 
Vector3
¤¤ 
normalA
¤¤ 
,
¤¤ 
normalB
¤¤  '
,
¤¤' (
normalC
¤¤) 0
;
¤¤0 1
}
¥¥ 
private
§§ 
struct
§§ 
MeshInfo
§§ 
{
§§ 
public
¨¨ 
int
¨¨  
firstTriangleIndex
¨¨ %
;
¨¨% &
public
©© 
int
©© 
numTriangles
©© 
;
©©  
public
ªª  
RayTracingMaterial
ªª !
material
ªª" *
;
ªª* +
}
«« 
}¬¬ ¿#
bC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\Tests\CamTest.cs
[ 
ExecuteAlways 
] 
public 
class 
CamTest 
: 
MonoBehaviour $
{% &
[		 
SerializeField		 
]		 
private		 
bool		 !
run		" %
;		% &
[

 
SerializeField

 
]

 
private

 
Vector2

 $
debugPointCount

% 4
;

4 5
[ 
SerializeField 
] 
private 
float "
radius# )
;) *
private 
Camera 
cam 
; 
private 
void 
Start 
( 
) 
{ 
cam 
= 
Camera 
. 
main 
; 
} 
private 
void 
Update 
( 
) 
{ 
if 

( 
! 
run 
) 
return 
; 
	Transform 
camT 
= 
cam 
. 
	transform &
;& '
float 
planeHeight 
= 
cam 
.  
nearClipPlane  -
*. /
Mathf0 5
.5 6
Tan6 9
(9 :
cam: =
.= >
fieldOfView> I
*J K
$numL P
*Q R
MathfS X
.X Y
Deg2RadY `
)` a
*b c
$numd e
;e f
float 

planeWidth 
= 
planeHeight &
*' (
cam) ,
., -
aspect- 3
;3 4
Vector3 
bottomLeftLocal 
=  !
new" %
Vector3& -
(- .
-. /

planeWidth/ 9
/: ;
$num< =
,= >
-? @
planeHeight@ K
/L M
$numN O
,O P
camQ T
.T U
nearClipPlaneU b
)b c
;c d
for 
( 
int 
x 
= 
$num 
; 
x 
< 
debugPointCount +
.+ ,
x, -
;- .
x/ 0
++0 2
)2 3
{4 5
for   
(   
int   
y   
=   
$num   
;   
y   
<   
debugPointCount    /
.  / 0
y  0 1
;  1 2
y  3 4
++  4 6
)  6 7
{  8 9
float!! 
tx!! 
=!! 
x!! 
/!! 
(!!  
debugPointCount!!  /
.!!/ 0
x!!0 1
-!!2 3
$num!!4 6
)!!6 7
;!!7 8
float"" 
ty"" 
="" 
y"" 
/"" 
(""  
debugPointCount""  /
.""/ 0
y""0 1
-""2 3
$num""4 6
)""6 7
;""7 8
Vector3$$ 

pointLocal$$ "
=$$# $
bottomLeftLocal$$% 4
+$$5 6
new$$7 :
Vector3$$; B
($$B C

planeWidth$$C M
*$$N O
tx$$P R
,$$R S
planeHeight$$T _
*$$` a
ty$$b d
)$$d e
;$$e f
Vector3%% 
point%% 
=%% 
camT%%  $
.%%$ %
position%%% -
+%%. /
camT%%0 4
.%%4 5
right%%5 :
*%%; <

pointLocal%%= G
.%%G H
x%%H I
+%%J K
camT%%L P
.%%P Q
up%%Q S
*%%T U

pointLocal%%V `
.%%` a
y%%a b
+%%c d
camT%%e i
.%%i j
forward%%j q
*%%r s

pointLocal%%t ~
.%%~ 
z	%% 
;
%% 
using'' 
('' 
Draw'' 
.'' 
Command'' #
(''# $
cam''% (
)'') *
)''* +
Draw'', 0
.''0 1
Sphere''1 7
(''7 8
point''8 =
,''= >
radius''? E
,''E F
Color''G L
.''L M
white''M R
)''R S
;''S T
}(( 
})) 	
}** 
}++ Ó
eC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\Tests\Screenshot.cs
public 
class 

Screenshot 
: 
MonoBehaviour '
{( )
public 

void 
TakeScreenshot 
( 
)  
{! "
string 
	directory 
= 
Application &
.& '
dataPath' /
+0 1
$str2 <
;< =
if		 

(		 
!		 
	Directory		 
.		 
Exists		 
(		 
	directory		 '
)		' (
)		( )
	Directory		* 3
.		3 4
CreateDirectory		4 C
(		C D
	directory		D M
)		M N
;		N O
string 
fileName 
= 
$str "
+# $
DateTime% -
.- .
Now. 1
.1 2
ToString2 :
(: ;
$str; P
)P Q
+R S
$strT Z
;Z [
string 
filePath 
= 
Path 
. 
Combine &
(& '
	directory' 0
,0 1
fileName2 :
): ;
;; <
ScreenCapture 
. 
CaptureScreenshot '
(' (
filePath( 0
)0 1
;1 2
Debug 
. 
Log 
( 
$str &
+' (
filePath) 1
)1 2
;2 3
} 
} 
cC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\MovementHelper.cs
public 
class 
MovementHelper 
{ 
public 

static 
Vector2  
GetResultingPosition .
(. /
Vector2/ 6
startPosition7 D
,D E
floatF K
angleDegreesL X
,X Y
floatZ _
distance` h
)h i
{j k
float 
angleRadians 
= 
( 
$num  
-! "
angleDegrees# /
)/ 0
*1 2
Mathf3 8
.8 9
Deg2Rad9 @
;@ A
float		 
deltaX		 
=		 
Mathf		 
.		 
Cos		  
(		  !
angleRadians		! -
)		- .
*		/ 0
distance		1 9
;		9 :
float

 
deltaY

 
=

 
Mathf

 
.

 
Sin

  
(

  !
angleRadians

! -
)

- .
*

/ 0
distance

1 9
;

9 :
Vector2 
resultingPosition !
=" #
startPosition$ 1
+2 3
new4 7
Vector28 ?
(? @
deltaX@ F
,F G
deltaYH N
)N O
;O P
return 
resultingPosition  
;  !
} 
public 

static 
float 
GetAngleInDegrees )
() *
Vector2* 1
point12 8
,8 9
Vector2: A
point2B H
)H I
{J K
Vector2 
	direction 
= 
point2 "
-# $
point1% +
;+ ,
float 
angleRadians 
= 
Mathf "
." #
Atan2# (
(( )
	direction) 2
.2 3
x3 4
,4 5
	direction6 ?
.? @
y@ A
)A B
;B C
float 
angleDegrees 
= 
angleRadians )
** +
Mathf, 1
.1 2
Rad2Deg2 9
;9 :
if 

( 
angleDegrees 
< 
$num 
) 
{ 	
angleDegrees 
+= 
$num 
;  
}   	
return"" 
angleDegrees"" 
;"" 
}## 
}$$ µ	
oC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\Objects\RayTracingMaterial.cs
[ 
Serializable 
] 
public 
struct 
RayTracingMaterial  
{! "
[ 
Header 
( 
$str 
) 
] 
public 

Color 
color 
; 
public 

Color 
emissionColor 
; 
public		 

Color		 
specularColor		 
;		 
[ 
Header 
( 
$str 
) 
] 
public 

float 
emissionStrength !
;! "
[ 
Range 

(
 
$num 
, 
$num 
) 
] 
public 
float 

smoothness )
;) *
[ 
Range 

(
 
$num 
, 
$num 
) 
] 
public 
float 
specularProbability 2
;2 3
} 
iC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\Objects\SphereObject.cs
[ 
ExecuteAlways 
] 
public 
class 
SphereObject 
: 
MonoBehaviour )
{* +
private 
static 
readonly 
int 

Glossiness  *
=+ ,
Shader- 3
.3 4
PropertyToID4 @
(@ A
$strA N
)N O
;O P
public 

RayTracingMaterial 
material &
;& '
private		 
Material		 
mat		 
;		 
private 
void 
Update 
( 
) 
{ 
if 

( 
mat 
== 
null 
) 
mat 
= 
new "
Material# +
(+ ,
Shader, 2
.2 3
Find3 7
(7 8
$str8 B
)B C
)C D
;D E
mat 
. 
color 
= 
material 
. 
color "
;" #
mat 
. 
SetFloat 
( 

Glossiness 
,  
material! )
.) *

smoothness* 4
)4 5
;5 6
GetComponent 
< 
MeshRenderer !
>! "
(" #
)# $
.$ %
material% -
=. /
mat0 3
;3 4
} 
} 
iC:\Users\kdeen\OneDrive\Documents\Coding Projects\Camera-Simulator\Assets\Scripts\Tests\ShaderRenderer.cs
[ 
ExecuteAlways 
] 
public 
class 
ShaderRenderer 
: 
MonoBehaviour +
{, -
[ 
SerializeField 
] 
private 
Shader #
shader$ *
;* +
private 
Material 
rayTracingMat "
;" #
private		 
void		 
Start		 
(		 
)		 
=>		 
rayTracingMat		 )
=		* +
new		, /
Material		0 8
(		8 9
shader		9 ?
)		? @
;		@ A
private 
void 
OnRenderImage 
( 
RenderTexture ,
source- 3
,3 4
RenderTexture5 B
destinationC N
)N O
{P Q
if 

( 
Camera 
. 
current 
. 
name 
!=  "
$str# 0
)0 1
Graphics2 :
.: ;
Blit; ?
(? @
null@ D
,D E
destinationF Q
,Q R
rayTracingMatS `
)` a
;a b
else 
Graphics 
. 
Blit 
( 
source !
,! "
destination# .
). /
;/ 0
} 
} 